version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - RMQ_URL=amqp://rabbitmq:5672
      - RMQ_QUEUE=microservice_1_queue
      - MICROSERVICE_1_RMQ_QUEUE=microservice_1_queue
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MICROSERVICE_1_REDIS_DB=1
      - MICROSERVICE_2_REDIS_DB=2
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass0123
      - LOG_LEVEL=info
    depends_on:
      - rabbitmq
      - redis
      - postgres

  microservice-1:
    build:
      context: .
      dockerfile: ./apps/microservice-1/Dockerfile
    environment:
      - NODE_ENV=production
      - RMQ_URL=amqp://rabbitmq:5672
      - RMQ_QUEUE=microservice_1_queue
    depends_on:
      - rabbitmq

  microservice-2:
    build:
      context: .
      dockerfile: ./apps/microservice-2/Dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=2
    depends_on:
      - redis

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass123
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    command: ['redis-server', '--loglevel', 'verbose']

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '8080:8080'

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=illchangeitanyway
    depends_on:
      - prometheus
    ports:
      - '3010:3000'

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'

  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:
  loki_data:
