version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - .env 
    depends_on:
      - rabbitmq
      - redis
      - keycloak

  microservice-1:
    build:
      context: .
      dockerfile: ./apps/microservice-1/Dockerfile
    env_file:
      - .env 
    depends_on:
      - rabbitmq
      - keycloak

  microservice-2:
    build:
      context: .
      dockerfile: ./apps/microservice-2/Dockerfile
    env_file:
      - .env
    depends_on:
      - redis
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - '8081:8080' # Ensure this is correct for local access
    env_file:
      - .env # Reference the .env file for admin credentials
    depends_on:
      postgres:
        condition: service_healthy
    command: ['start-dev']

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    restart: always
    env_file:
      - .env
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=200'

  redis:
    image: redis:alpine
    env_file:
      - .env
    ports:
      - '6379:6379'
    command: ['redis-server', '--loglevel', 'verbose']

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - '5672:5672'
      - '15672:15672'

  adminer:
    image: adminer
    container_name: adminer
    env_file:
      - .env
    ports:
      - '8080:8080'

  grafana:
    image: grafana/grafana:latest
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    ports:
      - '3010:3000'

  prometheus:
    image: prom/prometheus:latest
    env_file:
      - .env
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'

  loki:
    image: grafana/loki:latest
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

volumes:
  postgres_data:
  grafana_data:
  prometheus_data:
  loki_data:
