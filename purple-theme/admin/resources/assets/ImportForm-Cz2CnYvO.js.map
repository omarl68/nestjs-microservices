{"version":3,"file":"ImportForm-Cz2CnYvO.js","sources":["../../src/clients/import/ImportForm.tsx"],"sourcesContent":["import { fetchWithError } from \"@keycloak/keycloak-admin-client\";\nimport type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport { Language } from \"@patternfly/react-code-editor\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  FormGroup,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { FileUploadForm } from \"../../components/json-file-upload/FileUploadForm\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport {\n  addTrailingSlash,\n  convertFormValuesToObject,\n  convertToFormValues,\n} from \"../../util\";\nimport { getAuthorizationHeaders } from \"../../utils/getAuthorizationHeaders\";\nimport { ClientDescription } from \"../ClientDescription\";\nimport { FormFields } from \"../ClientDetails\";\nimport { CapabilityConfig } from \"../add/CapabilityConfig\";\nimport { toClient } from \"../routes/Client\";\nimport { toClients } from \"../routes/Clients\";\n\nconst isXml = (text: string) => text.match(/(<.[^(><.)]+>)/g);\n\nexport default function ImportForm() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const form = useForm<FormFields>();\n  const { register, handleSubmit, setValue } = form;\n  const [imported, setImported] = useState<ClientRepresentation>({});\n\n  const { addAlert, addError } = useAlerts();\n\n  const handleFileChange = async (contents: string) => {\n    try {\n      const parsed = await parseFileContents(contents);\n\n      convertToFormValues(parsed, setValue);\n      setImported(parsed);\n    } catch (error) {\n      addError(\"importParseError\", error);\n    }\n  };\n\n  async function parseFileContents(\n    contents: string,\n  ): Promise<ClientRepresentation> {\n    if (!isXml(contents)) {\n      return JSON.parse(contents);\n    }\n\n    const response = await fetchWithError(\n      `${addTrailingSlash(\n        adminClient.baseUrl,\n      )}admin/realms/${realm}/client-description-converter`,\n      {\n        method: \"POST\",\n        body: contents,\n        headers: getAuthorizationHeaders(await adminClient.getAccessToken()),\n      },\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Server responded with invalid status: ${response.statusText}`,\n      );\n    }\n\n    return response.json();\n  }\n\n  const save = async (client: ClientRepresentation) => {\n    try {\n      const newClient = await adminClient.clients.create({\n        ...imported,\n        ...convertFormValuesToObject({\n          ...client,\n          attributes: client.attributes || {},\n        }),\n      });\n      addAlert(t(\"clientImportSuccess\"), AlertVariant.success);\n      navigate(toClient({ realm, clientId: newClient.id, tab: \"settings\" }));\n    } catch (error) {\n      addError(\"clientImportError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey=\"importClient\" subKey=\"clientsExplain\" />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          onSubmit={handleSubmit(save)}\n          role=\"manage-clients\"\n        >\n          <FormProvider {...form}>\n            <FileUploadForm\n              id=\"realm-file\"\n              language={Language.json}\n              extension=\".json,.xml\"\n              helpText={t(\"helpFileUploadClient\")}\n              onChange={handleFileChange}\n            />\n            <ClientDescription hasConfigureAccess />\n            <FormGroup label={t(\"type\")} fieldId=\"kc-type\">\n              <KeycloakTextInput\n                id=\"kc-type\"\n                isReadOnly\n                {...register(\"protocol\")}\n              />\n            </FormGroup>\n            <CapabilityConfig unWrap={true} />\n            <ActionGroup>\n              <Button variant=\"primary\" type=\"submit\">\n                {t(\"save\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                component={(props) => (\n                  <Link {...props} to={toClients({ realm })} />\n                )}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormProvider>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["isXml","text","ImportForm","t","useTranslation","navigate","useNavigate","realm","useRealm","form","useForm","register","handleSubmit","setValue","imported","setImported","useState","addAlert","addError","useAlerts","handleFileChange","contents","parsed","parseFileContents","convertToFormValues","error","response","fetchWithError","addTrailingSlash","adminClient","getAuthorizationHeaders","jsxs","Fragment","jsx","ViewHeader","PageSection","FormAccess","client","newClient","convertFormValuesToObject","AlertVariant","toClient","FormProvider","FileUploadForm","Language","ClientDescription","FormGroup","KeycloakTextInput","CapabilityConfig","ActionGroup","Button","props","Link","toClients"],"mappings":"m5BAkCA,MAAMA,EAASC,GAAiBA,EAAK,MAAM,iBAAiB,EAE5D,SAAwBC,IAAa,CAC7B,KAAA,CAAE,EAAAC,GAAMC,IACRC,EAAWC,IACX,CAAE,MAAAC,GAAUC,IACZC,EAAOC,IACP,CAAE,SAAAC,EAAU,aAAAC,EAAc,SAAAC,CAAA,EAAaJ,EACvC,CAACK,EAAUC,CAAW,EAAIC,EAA+B,CAAE,CAAA,EAE3D,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EAEnCC,EAAmB,MAAOC,GAAqB,CAC/C,GAAA,CACI,MAAAC,EAAS,MAAMC,EAAkBF,CAAQ,EAE/CG,EAAoBF,EAAQT,CAAQ,EACpCE,EAAYO,CAAM,QACXG,EAAO,CACdP,EAAS,mBAAoBO,CAAK,CACpC,CAAA,EAGF,eAAeF,EACbF,EAC+B,CAC3B,GAAA,CAACrB,EAAMqB,CAAQ,EACV,OAAA,KAAK,MAAMA,CAAQ,EAG5B,MAAMK,EAAW,MAAMC,EACrB,GAAGC,EACDC,EAAY,OAAA,CACb,gBAAgBtB,CAAK,gCACtB,CACE,OAAQ,OACR,KAAMc,EACN,QAASS,EAAwB,MAAMD,EAAY,gBAAgB,CACrE,CAAA,EAGE,GAAA,CAACH,EAAS,GACZ,MAAM,IAAI,MACR,yCAAyCA,EAAS,UAAU,EAAA,EAIhE,OAAOA,EAAS,MAClB,CAkBA,OAEIK,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAW,CAAA,SAAS,eAAe,OAAO,iBAAiB,EAC5DD,EAACE,EAAY,CAAA,QAAQ,QACnB,SAAAF,EAACG,EAAA,CACC,aAAY,GACZ,SAAUxB,EAtBL,MAAOyB,GAAiC,CAC/C,GAAA,CACF,MAAMC,EAAY,MAAMT,EAAY,QAAQ,OAAO,CACjD,GAAGf,EACH,GAAGyB,EAA0B,CAC3B,GAAGF,EACH,WAAYA,EAAO,YAAc,CAAC,CAAA,CACnC,CAAA,CACF,EACDpB,EAASd,EAAE,qBAAqB,EAAGqC,EAAa,OAAO,EAC9CnC,EAAAoC,EAAS,CAAE,MAAAlC,EAAO,SAAU+B,EAAU,GAAI,IAAK,UAAY,CAAA,CAAC,QAC9Db,EAAO,CACdP,EAAS,oBAAqBO,CAAK,CACrC,CAAA,CASiC,EAC3B,KAAK,iBAEL,SAAAM,EAACW,EAAc,CAAA,GAAGjC,EAChB,SAAA,CAAAwB,EAACU,EAAA,CACC,GAAG,aACH,SAAUC,EAAS,KACnB,UAAU,aACV,SAAUzC,EAAE,sBAAsB,EAClC,SAAUiB,CAAA,CACZ,EACAa,EAACY,EAAkB,CAAA,mBAAkB,EAAC,CAAA,IACrCC,EAAU,CAAA,MAAO3C,EAAE,MAAM,EAAG,QAAQ,UACnC,SAAA8B,EAACc,EAAA,CACC,GAAG,UACH,WAAU,GACT,GAAGpC,EAAS,UAAU,CAAA,CAAA,EAE3B,EACAsB,EAACe,EAAiB,CAAA,OAAQ,EAAM,CAAA,IAC/BC,EACC,CAAA,SAAA,CAAAhB,EAACiB,GAAO,QAAQ,UAAU,KAAK,SAC5B,SAAA/C,EAAE,MAAM,EACX,EACA8B,EAACiB,EAAA,CACC,QAAQ,OACR,UAAYC,GACVlB,EAACmB,EAAM,CAAA,GAAGD,EAAO,GAAIE,EAAU,CAAE,MAAA9C,CAAM,CAAC,CAAG,CAAA,EAG5C,WAAE,QAAQ,CAAA,CACb,CAAA,EACF,CAAA,EACF,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}