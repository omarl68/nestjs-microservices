import{jsx as e,jsxs as v}from"react/jsx-runtime";import{useState as a}from"react";import{u as J,e as L,c as R,b as _,d as $,a as K,g as M,q as Q,P as U,ba as W,a0 as X,a1 as Y,a3 as Z,I as ii,J as oi,S as ti,F as ni,h as S,dF as b,f as A,A as ei}from"./index-C9t2UlUN.js";import{D as ri}from"./DynamicComponents-D5DD9CFr.js";import{F as si}from"./FormAccess-DnQCcStE.js";import{c as F}from"./camelCase-Df6HZkse.js";import{A as ci}from"./Form-Cdw1qhWG.js";import"react-dom";import"./FileUpload-CTw4RKK1.js";import"./CodeEditor-Cp4g17EF.js";import"./copy-icon-CYSS18Ce.js";import"./EmptyStateBody-CyIhnUop.js";import"./EmptyStateSecondaryActions-BekVwNvY.js";import"./GroupPickerDialog-tI6XV7Ln.js";import"./PaginatingTableToolbar-oQUfBy2J.js";import"./ToolbarContent-D6TJq6fk.js";import"./useToggle-K3Kx99tM.js";import"./KeycloakTextInput-DrlF32nr.js";import"./Modal-Bgkd26UL.js";import"./ConfirmDialog-BDkqxnFL.js";import"./DataListItemRow-Bimi62Tu.js";import"./grip-vertical-icon-B_ub3hpF.js";import"./_baseFlatten-BQ8y46Zj.js";import"./FlexItem-BEayPdRt.js";import"./KeySelect-CPI9XGq0.js";import"./MultiLineInput-DibC-IV_.js";import"./PasswordInput-CJKuHljf.js";import"./AddRoleMappingModal-BWNuJU0W.js";import"./KeycloakDataTable-2rLFZPhG.js";import"./filter-icon-C8nM2k1N.js";import"./KeycloakTextArea-DChmurIP.js";import"./capitalize-w6Zchk1l.js";import"./_baseSlice-F8doVSIJ.js";function Ji(){const{t}=J(),{addAlert:I,addError:x}=L(),f=R(),{realm:C}=_(),[D,g]=a(!1),[N,y]=a([]),[k,w]=a([]),[V,B]=a(),[d,E]=a(""),[h,P]=a([]),{policyName:l,conditionName:o}=$(),H=K(),p=M(),T=H.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],O=s=>{p.reset({config:s.configuration||{}})};Q(()=>A.clientPolicies.listPolicies(),s=>{if(y(s.policies??[]),o){const r=s.policies?.find(i=>i.name===l)?.conditions?.find(i=>i.condition===o),m=T?.find(i=>i.id===o);B(r),P(m?.properties),O(r)}},[]);const j=async s=>{const n=s.config,r=()=>h.reduce((i,c)=>(i[c.name]=n[c.name],i),{}),m=N.map(i=>{if(i.name!==l)return i;let c=i.conditions??[];if(o){const G={condition:V?.condition,configuration:r()},u=c.findIndex(z=>o===z.condition);if(u===-1)return;const q=[...c.slice(0,u),G,...c.slice(u+1)];return{...i,conditions:q}}return c=c.concat({condition:k[0].condition,configuration:r()}),{...i,conditions:c}});try{await A.clientPolicies.updatePolicy({policies:m}),y(m),f(b({realm:C,policyName:l})),I(t(o?"updateClientConditionSuccess":"createClientConditionSuccess"),ei.success)}catch(i){x("createClientConditionError",i)}};return e(U,{variant:"light",children:e(W,{className:"kc-login-screen",title:t(o?"editCondition":"addCondition"),children:v(si,{isHorizontal:!0,role:"manage-realm",className:"pf-u-mt-lg",onSubmit:p.handleSubmit(j),children:[e(X,{label:t("conditionType"),fieldId:"conditionType",labelIcon:e(Y,{helpText:d?`${F(d.replace(/-/g," "))}Help`:"conditionsHelp",fieldLabelId:"conditionType"}),children:e(Z,{name:"conditions",defaultValue:"any-client",control:p.control,render:({field:s})=>e(ii,{placeholderText:t("selectACondition"),className:"kc-conditionType-select","data-testid":"conditionType-select",toggleId:"provider",isDisabled:!!o,onToggle:n=>g(n),onSelect:(n,r)=>{s.onChange(r),P(r.properties),E(r.id),w([{condition:r.id}]),g(!1)},selections:o||d,variant:oi.single,"aria-label":t("conditionType"),isOpen:D,children:T?.map(n=>e(ti,{selected:n.id===s.value,description:t(F(n.id.replace(/-/g," "))),value:n,children:n.id},n.id))})})}),e(ni,{...p,children:e(ri,{properties:h})}),v(ci,{children:[e(S,{variant:"primary",type:"submit","data-testid":"addCondition-saveBtn",isDisabled:d===""&&!o,children:t(o?"save":"add")}),e(S,{variant:"link","data-testid":"addCondition-cancelBtn",onClick:()=>f(b({realm:C,policyName:l})),children:t("cancel")})]})]})})})}export{Ji as default};
//# sourceMappingURL=NewClientPolicyCondition-C8erW_JO.js.map
