{"version":3,"file":"Dashboard-DZAPJVvl.js","sources":["../../../../libs/keycloak-admin-client/lib/defs/featureRepresentation.js","../../src/dashboard/ProviderInfo.tsx","../../src/dashboard/Dashboard.tsx"],"sourcesContent":["export var FeatureType;\n(function (FeatureType) {\n    FeatureType[\"Default\"] = \"DEFAULT\";\n    FeatureType[\"DisabledByDefault\"] = \"DISABLED_BY_DEFAULT\";\n    FeatureType[\"Preview\"] = \"PREVIEW\";\n    FeatureType[\"PreviewDisabledByDefault\"] = \"PREVIEW_DISABLED_BY_DEFAULT\";\n    FeatureType[\"Experimental\"] = \"EXPERIMENTAL\";\n    FeatureType[\"Deprecated\"] = \"DEPRECATED\";\n})(FeatureType || (FeatureType = {}));\n","import { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExpandableSection, PageSection } from \"@patternfly/react-core\";\nimport {\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\n\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport { TableToolbar } from \"../components/table-toolbar/TableToolbar\";\n\nexport const ProviderInfo = () => {\n  const { t } = useTranslation();\n  const serverInfo = useServerInfo();\n  const [filter, setFilter] = useState(\"\");\n  const [open, setOpen] = useState<string[]>([]);\n\n  const providerInfo = useMemo(\n    () =>\n      Object.entries(serverInfo.providers || []).filter(([key]) =>\n        key.toLowerCase().includes(filter.toLowerCase()),\n      ),\n    [filter],\n  );\n\n  const toggleOpen = (option: string) => {\n    if (open.includes(option)) {\n      setOpen(open.filter((item: string) => item !== option));\n    } else {\n      setOpen([...open, option]);\n    }\n  };\n\n  return (\n    <PageSection variant=\"light\">\n      <TableToolbar\n        inputGroupName=\"search\"\n        inputGroupPlaceholder={t(\"search\")}\n        inputGroupOnEnter={setFilter}\n      >\n        <TableComposable variant=\"compact\">\n          <Thead>\n            <Tr>\n              <Th width={20}>{t(\"spi\")}</Th>\n              <Th>{t(\"providers\")}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {providerInfo.map(([name, { providers }]) => (\n              <Tr key={name}>\n                <Td>{name}</Td>\n                <Td>\n                  <ul>\n                    {Object.entries(providers).map(\n                      ([key, { operationalInfo }]) => (\n                        <li key={key}>\n                          {key}\n                          {operationalInfo ? (\n                            <ExpandableSection\n                              key={key}\n                              isExpanded={open.includes(key)}\n                              onToggle={() => toggleOpen(key)}\n                              toggleText={\n                                open.includes(key)\n                                  ? t(\"showLess\")\n                                  : t(\"showMore\")\n                              }\n                            >\n                              <TableComposable borders={false}>\n                                <Tbody>\n                                  {Object.entries(operationalInfo).map(\n                                    ([key, value]) => (\n                                      <Tr key={key}>\n                                        <Td>{key}</Td>\n                                        <Td>{value}</Td>\n                                      </Tr>\n                                    ),\n                                  )}\n                                </Tbody>\n                              </TableComposable>\n                            </ExpandableSection>\n                          ) : null}\n                        </li>\n                      ),\n                    )}\n                  </ul>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </TableComposable>\n      </TableToolbar>\n    </PageSection>\n  );\n};\n","import { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ActionList,\n  ActionListItem,\n  Brand,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  EmptyState,\n  EmptyStateBody,\n  Grid,\n  GridItem,\n  Label,\n  List,\n  ListItem,\n  ListVariant,\n  PageSection,\n  Tab,\n  TabTitleText,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from \"@patternfly/react-core\";\n\nimport FeatureRepresentation, {\n  FeatureType,\n} from \"@keycloak/keycloak-admin-client/lib/defs/featureRepresentation\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport { HelpItem, label } from \"ui-shared\";\nimport environment from \"../environment\";\nimport { KeycloakSpinner } from \"../components/keycloak-spinner/KeycloakSpinner\";\nimport useLocaleSort, { mapByKey } from \"../utils/useLocaleSort\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../components/routable-tabs/RoutableTabs\";\nimport { DashboardTab, toDashboard } from \"./routes/Dashboard\";\nimport { ProviderInfo } from \"./ProviderInfo\";\n\nimport \"./dashboard.css\";\nimport { useFetch } from \"../utils/useFetch\";\nimport type RealmRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/realmRepresentation\";\nimport { adminClient } from \"../admin-client\";\nimport helpUrls from \"../help-urls\";\n\nconst EmptyDashboard = () => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const [realmInfo, setRealmInfo] = useState<RealmRepresentation>();\n  const brandImage = environment.logo ? environment.logo : \"/icon.svg\";\n  useFetch(() => adminClient.realms.findOne({ realm }), setRealmInfo, []);\n  const realmDisplayInfo = label(t, realmInfo?.displayName, realm);\n\n  return (\n    <PageSection variant=\"light\">\n      <EmptyState variant=\"large\">\n        <Brand\n          src={environment.resourceUrl + brandImage}\n          alt=\"Keycloak icon\"\n          className=\"keycloak__dashboard_icon\"\n        />\n        <Title headingLevel=\"h2\" size=\"3xl\">\n          {t(\"welcome\")}\n        </Title>\n        <Title headingLevel=\"h1\" size=\"4xl\">\n          {realmDisplayInfo}\n        </Title>\n        <EmptyStateBody>{t(\"introduction\")}</EmptyStateBody>\n      </EmptyState>\n    </PageSection>\n  );\n};\n\ntype FeatureItemProps = {\n  feature: FeatureRepresentation;\n};\n\nconst FeatureItem = ({ feature }: FeatureItemProps) => {\n  const { t } = useTranslation();\n  return (\n    <ListItem className=\"pf-u-mb-sm\">\n      {feature.name}&nbsp;\n      {feature.type === FeatureType.Experimental && (\n        <Label color=\"orange\">{t(\"experimental\")}</Label>\n      )}\n      {feature.type === FeatureType.Preview && (\n        <Label color=\"blue\">{t(\"preview\")}</Label>\n      )}\n      {feature.type === FeatureType.Default && (\n        <Label color=\"green\">{t(\"supported\")}</Label>\n      )}\n    </ListItem>\n  );\n};\n\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const serverInfo = useServerInfo();\n  const localeSort = useLocaleSort();\n  const [realmInfo, setRealmInfo] = useState<RealmRepresentation>();\n\n  const sortedFeatures = useMemo(\n    () => localeSort(serverInfo.features ?? [], mapByKey(\"name\")),\n    [serverInfo.features],\n  );\n\n  const disabledFeatures = useMemo(\n    () => sortedFeatures.filter((f) => !f.enabled) || [],\n    [serverInfo.features],\n  );\n\n  const enabledFeatures = useMemo(\n    () => sortedFeatures.filter((f) => f.enabled) || [],\n    [serverInfo.features],\n  );\n\n  const useTab = (tab: DashboardTab) =>\n    useRoutableTab(\n      toDashboard({\n        realm,\n        tab,\n      }),\n    );\n\n  useFetch(() => adminClient.realms.findOne({ realm }), setRealmInfo, []);\n\n  const realmDisplayInfo = label(t, realmInfo?.displayName, realm);\n\n  const welcomeTab = useTab(\"welcome\");\n  const infoTab = useTab(\"info\");\n  const providersTab = useTab(\"providers\");\n\n  if (Object.keys(serverInfo).length === 0) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <PageSection variant=\"light\">\n        <TextContent className=\"pf-u-mr-sm\">\n          <Text component=\"h1\">{t(\"realmNameTitle\", { name: realm })}</Text>\n        </TextContent>\n      </PageSection>\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <RoutableTabs\n          data-testid=\"dashboard-tabs\"\n          defaultLocation={toDashboard({\n            realm,\n            tab: \"welcome\",\n          })}\n          isBox\n          mountOnEnter\n        >\n          <Tab\n            id=\"welcome\"\n            data-testid=\"welcomeTab\"\n            title={<TabTitleText>{t(\"welcomeTabTitle\")}</TabTitleText>}\n            {...welcomeTab}\n          >\n            <PageSection variant=\"light\">\n              <div className=\"pf-l-grid pf-u-ml-lg\">\n                <div className=\"pf-l-grid__item pf-m-12-col\">\n                  <Title\n                    className=\"pf-u-font-weight-bold\"\n                    headingLevel=\"h2\"\n                    size=\"3xl\"\n                  >\n                    {t(\"welcomeTo\", { realmDisplayInfo })}\n                  </Title>\n                </div>\n                <div className=\"pf-l-grid__item keycloak__dashboard_welcome_tab\">\n                  <Text component={TextVariants.h3}>{t(\"welcomeText\")}</Text>\n                </div>\n                <div className=\"pf-l-grid__item pf-m-10-col pf-u-mt-md\">\n                  <Button\n                    className=\"pf-u-px-lg pf-u-py-sm\"\n                    component=\"a\"\n                    href={helpUrls.documentation}\n                    target=\"_blank\"\n                    variant=\"primary\"\n                  >\n                    {t(\"viewDocumentation\")}\n                  </Button>\n                </div>\n                <ActionList className=\"pf-u-mt-sm\">\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.guides}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"viewGuides\")}\n                    </Button>\n                  </ActionListItem>\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.community}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"joinCommunity\")}\n                    </Button>\n                  </ActionListItem>\n                  <ActionListItem>\n                    <Button\n                      component=\"a\"\n                      href={helpUrls.blog}\n                      target=\"_blank\"\n                      variant=\"tertiary\"\n                    >\n                      {t(\"readBlog\")}\n                    </Button>\n                  </ActionListItem>\n                </ActionList>\n              </div>\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"info\"\n            data-testid=\"infoTab\"\n            title={<TabTitleText>{t(\"serverInfo\")}</TabTitleText>}\n            {...infoTab}\n          >\n            <PageSection variant=\"light\">\n              <Grid hasGutter>\n                <GridItem lg={2} sm={12}>\n                  <Card className=\"keycloak__dashboard_card\">\n                    <CardTitle>{t(\"serverInfo\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"version\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.systemInfo?.version}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                    <CardTitle>{t(\"memory\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"totalMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.totalFormated}\n                          </DescriptionListDescription>\n                          <DescriptionListTerm>\n                            {t(\"freeMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.freeFormated}\n                          </DescriptionListDescription>\n                          <DescriptionListTerm>\n                            {t(\"usedMemory\")}\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            {serverInfo.memoryInfo?.usedFormated}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                  </Card>\n                </GridItem>\n                <GridItem lg={10} sm={12}>\n                  <Card className=\"keycloak__dashboard_card\">\n                    <CardTitle>{t(\"profile\")}</CardTitle>\n                    <CardBody>\n                      <DescriptionList>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"enabledFeatures\")}{\" \"}\n                            <HelpItem\n                              fieldLabelId=\"enabledFeatures\"\n                              helpText={t(\"infoEnabledFeatures\")}\n                            />\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            <List variant={ListVariant.inline}>\n                              {enabledFeatures.map((feature) => (\n                                <FeatureItem\n                                  key={feature.name}\n                                  feature={feature}\n                                />\n                              ))}\n                            </List>\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>\n                            {t(\"disabledFeatures\")}{\" \"}\n                            <HelpItem\n                              fieldLabelId=\"disabledFeatures\"\n                              helpText={t(\"infoDisabledFeatures\")}\n                            />\n                          </DescriptionListTerm>\n                          <DescriptionListDescription>\n                            <List variant={ListVariant.inline}>\n                              {disabledFeatures.map((feature) => (\n                                <FeatureItem\n                                  key={feature.name}\n                                  feature={feature}\n                                />\n                              ))}\n                            </List>\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      </DescriptionList>\n                    </CardBody>\n                  </Card>\n                </GridItem>\n              </Grid>\n            </PageSection>\n          </Tab>\n          <Tab\n            id=\"providers\"\n            data-testid=\"providersTab\"\n            title={<TabTitleText>{t(\"providerInfo\")}</TabTitleText>}\n            {...providersTab}\n          >\n            <ProviderInfo />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n};\n\nexport default function DashboardSection() {\n  const { realm } = useRealm();\n  const isMasterRealm = realm === \"master\";\n  return (\n    <>\n      {!isMasterRealm && <EmptyDashboard />}\n      {isMasterRealm && <Dashboard />}\n    </>\n  );\n}\n"],"names":["FeatureType","ProviderInfo","t","useTranslation","serverInfo","useServerInfo","filter","setFilter","useState","open","setOpen","providerInfo","useMemo","key","toggleOpen","option","item","jsx","PageSection","TableToolbar","jsxs","TableComposable","Thead","Tr","Th","Tbody","name","providers","Td","operationalInfo","ExpandableSection","value","EmptyDashboard","realm","useRealm","realmInfo","setRealmInfo","brandImage","environment","useFetch","adminClient","realmDisplayInfo","label","EmptyState","Brand","Title","EmptyStateBody","FeatureItem","feature","ListItem","Label","Dashboard","localeSort","useLocaleSort","sortedFeatures","mapByKey","disabledFeatures","f","enabledFeatures","useTab","tab","useRoutableTab","toDashboard","welcomeTab","infoTab","providersTab","KeycloakSpinner","Fragment","TextContent","Text","RoutableTabs","Tab","TabTitleText","TextVariants","Button","helpUrls","ActionList","ActionListItem","Grid","GridItem","Card","CardTitle","CardBody","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","HelpItem","List","ListVariant","DashboardSection","isMasterRealm"],"mappings":"uwDAAO,IAAIA,GACV,SAAUA,EAAa,CACpBA,EAAY,QAAa,UACzBA,EAAY,kBAAuB,sBACnCA,EAAY,QAAa,UACzBA,EAAY,yBAA8B,8BAC1CA,EAAY,aAAkB,eAC9BA,EAAY,WAAgB,YAChC,GAAGA,IAAgBA,EAAc,CAAA,EAAG,ECO7B,MAAMC,GAAe,IAAM,CAC1B,KAAA,CAAE,EAAAC,GAAMC,IACRC,EAAaC,IACb,CAACC,EAAQC,CAAS,EAAIC,EAAS,EAAE,EACjC,CAACC,EAAMC,CAAO,EAAIF,EAAmB,CAAE,CAAA,EAEvCG,EAAeC,EACnB,IACE,OAAO,QAAQR,EAAW,WAAa,CAAA,CAAE,EAAE,OAAO,CAAC,CAACS,CAAG,IACrDA,EAAI,YAAc,EAAA,SAASP,EAAO,aAAa,CACjD,EACF,CAACA,CAAM,CAAA,EAGHQ,EAAcC,GAAmB,CACjCN,EAAK,SAASM,CAAM,EACtBL,EAAQD,EAAK,OAAQO,GAAiBA,IAASD,CAAM,CAAC,EAEtDL,EAAQ,CAAC,GAAGD,EAAMM,CAAM,CAAC,CAC3B,EAIA,OAAAE,EAACC,EAAY,CAAA,QAAQ,QACnB,SAAAD,EAACE,GAAA,CACC,eAAe,SACf,sBAAuBjB,EAAE,QAAQ,EACjC,kBAAmBK,EAEnB,SAAAa,EAACC,EAAgB,CAAA,QAAQ,UACvB,SAAA,CAACJ,EAAAK,GAAA,CACC,WAACC,EACC,CAAA,SAAA,CAAAN,EAACO,EAAG,CAAA,MAAO,GAAK,SAAAtB,EAAE,KAAK,EAAE,EACxBe,EAAAO,EAAA,CAAI,SAAEtB,EAAA,WAAW,CAAE,CAAA,CAAA,CAAA,CACtB,CACF,CAAA,EACCe,EAAAQ,EAAA,CACE,SAAad,EAAA,IAAI,CAAC,CAACe,EAAM,CAAE,UAAAC,CAAU,CAAC,IACrCP,EAACG,EACC,CAAA,SAAA,CAAAN,EAACW,GAAI,SAAKF,CAAA,CAAA,IACTE,EACC,CAAA,SAAAX,EAAC,MACE,SAAO,OAAA,QAAQU,CAAS,EAAE,IACzB,CAAC,CAACd,EAAK,CAAE,gBAAAgB,EAAiB,MACvB,KACE,CAAA,SAAA,CAAAhB,EACAgB,EACCZ,EAACa,GAAA,CAEC,WAAYrB,EAAK,SAASI,CAAG,EAC7B,SAAU,IAAMC,EAAWD,CAAG,EAC9B,WACEJ,EAAK,SAASI,CAAG,EACbX,EAAE,UAAU,EACZA,EAAE,UAAU,EAGlB,SAAAe,EAACI,GAAgB,QAAS,GACxB,WAACI,EACE,CAAA,SAAA,OAAO,QAAQI,CAAe,EAAE,IAC/B,CAAC,CAAChB,EAAKkB,CAAK,MACTR,EACC,CAAA,SAAA,CAACN,EAAAW,EAAA,CAAI,SAAAf,CAAI,CAAA,EACTI,EAACW,GAAI,SAAMG,CAAA,CAAA,CAAA,CAAA,EAFJlB,CAGT,GAGN,CACF,CAAA,CAAA,EApBKA,CAAA,EAsBL,IAAA,CAAA,EA1BGA,CA2BT,GAGN,CACF,CAAA,CAAA,GArCOa,CAsCT,CACD,EACH,CAAA,EACF,CAAA,CAEJ,CAAA,CAAA,CAEJ,EC7CMM,GAAiB,IAAM,CACrB,KAAA,CAAE,EAAA9B,GAAMC,IACR,CAAE,MAAA8B,GAAUC,IACZ,CAACC,EAAWC,CAAY,EAAI5B,EAA8B,EAC1D6B,EAAaC,EAAY,KAAOA,EAAY,KAAO,YAChDC,EAAA,IAAMC,GAAY,OAAO,QAAQ,CAAE,MAAAP,EAAO,EAAGG,EAAc,CAAA,CAAE,EACtE,MAAMK,EAAmBC,EAAMxC,EAAGiC,GAAW,YAAaF,CAAK,EAE/D,SACGf,EAAY,CAAA,QAAQ,QACnB,SAACE,EAAAuB,GAAA,CAAW,QAAQ,QAClB,SAAA,CAAA1B,EAAC2B,GAAA,CACC,IAAKN,EAAY,YAAcD,EAC/B,IAAI,gBACJ,UAAU,0BAAA,CACZ,EACApB,EAAC4B,GAAM,aAAa,KAAK,KAAK,MAC3B,SAAA3C,EAAE,SAAS,EACd,IACC2C,EAAM,CAAA,aAAa,KAAK,KAAK,MAC3B,SACHJ,EAAA,EACCxB,EAAA6B,GAAA,CAAgB,SAAE5C,EAAA,cAAc,CAAE,CAAA,CAAA,CACrC,CAAA,CACF,CAAA,CAEJ,EAMM6C,EAAc,CAAC,CAAE,QAAAC,KAAgC,CAC/C,KAAA,CAAE,EAAA9C,GAAMC,IAEZ,OAAAiB,EAAC6B,GAAS,CAAA,UAAU,aACjB,SAAA,CAAQD,EAAA,KAAK,IACbA,EAAQ,OAAShD,EAAY,cAC5BiB,EAACiC,GAAM,MAAM,SAAU,SAAEhD,EAAA,cAAc,CAAE,CAAA,EAE1C8C,EAAQ,OAAShD,EAAY,SAC5BiB,EAACiC,GAAM,MAAM,OAAQ,SAAEhD,EAAA,SAAS,CAAE,CAAA,EAEnC8C,EAAQ,OAAShD,EAAY,SAC5BiB,EAACiC,GAAM,MAAM,QAAS,SAAEhD,EAAA,WAAW,CAAE,CAAA,CAEzC,CAAA,CAAA,CAEJ,EAEMiD,GAAY,IAAM,CAChB,KAAA,CAAE,EAAAjD,GAAMC,IACR,CAAE,MAAA8B,GAAUC,IACZ9B,EAAaC,IACb+C,EAAaC,KACb,CAAClB,EAAWC,CAAY,EAAI5B,EAA8B,EAE1D8C,EAAiB1C,EACrB,IAAMwC,EAAWhD,EAAW,UAAY,CAAA,EAAImD,GAAS,MAAM,CAAC,EAC5D,CAACnD,EAAW,QAAQ,CAAA,EAGhBoD,EAAmB5C,EACvB,IAAM0C,EAAe,OAAQG,GAAM,CAACA,EAAE,OAAO,GAAK,CAAC,EACnD,CAACrD,EAAW,QAAQ,CAAA,EAGhBsD,EAAkB9C,EACtB,IAAM0C,EAAe,OAAQG,GAAMA,EAAE,OAAO,GAAK,CAAC,EAClD,CAACrD,EAAW,QAAQ,CAAA,EAGhBuD,EAAUC,GACdC,GACEC,EAAY,CACV,MAAA7B,EACA,IAAA2B,CAAA,CACD,CAAA,EAGIrB,EAAA,IAAMC,GAAY,OAAO,QAAQ,CAAE,MAAAP,EAAO,EAAGG,EAAc,CAAA,CAAE,EAEtE,MAAMK,EAAmBC,EAAMxC,EAAGiC,GAAW,YAAaF,CAAK,EAEzD8B,EAAaJ,EAAO,SAAS,EAC7BK,EAAUL,EAAO,MAAM,EACvBM,EAAeN,EAAO,WAAW,EAEvC,OAAI,OAAO,KAAKvD,CAAU,EAAE,SAAW,IAC7B8D,GAAgB,CAAA,CAAA,EAKtB9C,EAAA+C,EAAA,CAAA,SAAA,CAAAlD,EAACC,GAAY,QAAQ,QACnB,WAACkD,GAAY,CAAA,UAAU,aACrB,SAACnD,EAAAoD,EAAA,CAAK,UAAU,KAAM,SAAAnE,EAAE,iBAAkB,CAAE,KAAM+B,CAAO,CAAA,EAAE,EAC7D,CACF,CAAA,EACChB,EAAAC,EAAA,CAAY,QAAQ,QAAQ,UAAU,WACrC,SAAAE,EAACkD,GAAA,CACC,cAAY,iBACZ,gBAAiBR,EAAY,CAC3B,MAAA7B,EACA,IAAK,SAAA,CACN,EACD,MAAK,GACL,aAAY,GAEZ,SAAA,CAAAhB,EAACsD,EAAA,CACC,GAAG,UACH,cAAY,aACZ,MAAOtD,EAACuD,EAAc,CAAA,SAAAtE,EAAE,iBAAiB,EAAE,EAC1C,GAAG6D,EAEJ,WAAC7C,EAAY,CAAA,QAAQ,QACnB,SAACE,EAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACH,EAAA,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAC4B,EAAA,CACC,UAAU,wBACV,aAAa,KACb,KAAK,MAEJ,SAAE3C,EAAA,YAAa,CAAE,iBAAAuC,CAAA,CAAkB,CAAA,CAAA,EAExC,EACCxB,EAAA,MAAA,CAAI,UAAU,kDACb,SAACA,EAAAoD,EAAA,CAAK,UAAWI,GAAa,GAAK,SAAAvE,EAAE,aAAa,CAAE,CAAA,EACtD,EACAe,EAAC,MAAI,CAAA,UAAU,yCACb,SAAAA,EAACyD,EAAA,CACC,UAAU,wBACV,UAAU,IACV,KAAMC,EAAS,cACf,OAAO,SACP,QAAQ,UAEP,WAAE,mBAAmB,CAAA,CAAA,EAE1B,EACAvD,EAACwD,GAAW,CAAA,UAAU,aACpB,SAAA,CAAA3D,EAAC4D,EACC,CAAA,SAAA5D,EAACyD,EAAA,CACC,UAAU,IACV,KAAMC,EAAS,OACf,OAAO,SACP,QAAQ,WAEP,WAAE,YAAY,CAAA,CAAA,EAEnB,IACCE,EACC,CAAA,SAAA5D,EAACyD,EAAA,CACC,UAAU,IACV,KAAMC,EAAS,UACf,OAAO,SACP,QAAQ,WAEP,WAAE,eAAe,CAAA,CAAA,EAEtB,IACCE,EACC,CAAA,SAAA5D,EAACyD,EAAA,CACC,UAAU,IACV,KAAMC,EAAS,KACf,OAAO,SACP,QAAQ,WAEP,WAAE,UAAU,CAAA,CAAA,EAEjB,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,EACA1D,EAACsD,EAAA,CACC,GAAG,OACH,cAAY,UACZ,MAAOtD,EAACuD,EAAc,CAAA,SAAAtE,EAAE,YAAY,EAAE,EACrC,GAAG8D,EAEJ,WAAC9C,EAAY,CAAA,QAAQ,QACnB,SAACE,EAAA0D,GAAA,CAAK,UAAS,GACb,SAAA,CAAC7D,EAAA8D,EAAA,CAAS,GAAI,EAAG,GAAI,GACnB,SAAC3D,EAAA4D,EAAA,CAAK,UAAU,2BACd,SAAA,CAAC/D,EAAAgE,EAAA,CAAW,SAAE/E,EAAA,YAAY,CAAE,CAAA,EAC3Be,EAAAiE,EAAA,CACC,SAACjE,EAAAkE,EAAA,CACC,WAACC,EACC,CAAA,SAAA,CAACnE,EAAAoE,EAAA,CACE,SAAEnF,EAAA,SAAS,CACd,CAAA,EACCe,EAAAqE,EAAA,CACE,SAAWlF,EAAA,YAAY,QAC1B,CAAA,CACF,CAAA,CACF,CAAA,EACF,EACCa,EAAAgE,EAAA,CAAW,SAAE/E,EAAA,QAAQ,CAAE,CAAA,EACvBe,EAAAiE,EAAA,CACC,SAACjE,EAAAkE,EAAA,CACC,WAACC,EACC,CAAA,SAAA,CAACnE,EAAAoE,EAAA,CACE,SAAEnF,EAAA,aAAa,CAClB,CAAA,EACCe,EAAAqE,EAAA,CACE,SAAWlF,EAAA,YAAY,cAC1B,EACCa,EAAAoE,EAAA,CACE,SAAEnF,EAAA,YAAY,CACjB,CAAA,EACCe,EAAAqE,EAAA,CACE,SAAWlF,EAAA,YAAY,aAC1B,EACCa,EAAAoE,EAAA,CACE,SAAEnF,EAAA,YAAY,CACjB,CAAA,EACCe,EAAAqE,EAAA,CACE,SAAWlF,EAAA,YAAY,aAC1B,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,EACAa,EAAC8D,GAAS,GAAI,GAAI,GAAI,GACpB,SAAA3D,EAAC4D,EAAK,CAAA,UAAU,2BACd,SAAA,CAAC/D,EAAAgE,EAAA,CAAW,SAAE/E,EAAA,SAAS,CAAE,CAAA,EACzBe,EAACiE,EACC,CAAA,SAAA9D,EAAC+D,EACC,CAAA,SAAA,CAAA/D,EAACgE,EACC,CAAA,SAAA,CAAAhE,EAACiE,EACE,CAAA,SAAA,CAAAnF,EAAE,iBAAiB,EAAG,IACvBe,EAACsE,EAAA,CACC,aAAa,kBACb,SAAUrF,EAAE,qBAAqB,CAAA,CACnC,CAAA,EACF,EACAe,EAACqE,EACC,CAAA,SAAArE,EAACuE,EAAK,CAAA,QAASC,EAAY,OACxB,SAAA/B,EAAgB,IAAKV,GACpB/B,EAAC8B,EAAA,CAEC,QAAAC,CAAA,EADKA,EAAQ,IAAA,CAGhB,EACH,CACF,CAAA,CAAA,EACF,IACCoC,EACC,CAAA,SAAA,CAAAhE,EAACiE,EACE,CAAA,SAAA,CAAAnF,EAAE,kBAAkB,EAAG,IACxBe,EAACsE,EAAA,CACC,aAAa,mBACb,SAAUrF,EAAE,sBAAsB,CAAA,CACpC,CAAA,EACF,EACAe,EAACqE,EACC,CAAA,SAAArE,EAACuE,EAAK,CAAA,QAASC,EAAY,OACxB,SAAAjC,EAAiB,IAAKR,GACrB/B,EAAC8B,EAAA,CAEC,QAAAC,CAAA,EADKA,EAAQ,IAAA,CAGhB,EACH,CACF,CAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,EACA/B,EAACsD,EAAA,CACC,GAAG,YACH,cAAY,eACZ,MAAOtD,EAACuD,EAAc,CAAA,SAAAtE,EAAE,cAAc,EAAE,EACvC,GAAG+D,EAEJ,WAAChE,GAAa,EAAA,CAAA,CAChB,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EAEA,SAAwByF,IAAmB,CACnC,KAAA,CAAE,MAAAzD,GAAUC,IACZyD,EAAgB1D,IAAU,SAChC,OAEKb,EAAA+C,EAAA,CAAA,SAAA,CAAC,CAAAwB,KAAkB3D,GAAe,EAAA,EAClC2D,KAAkBxC,GAAU,EAAA,CAC/B,CAAA,CAAA,CAEJ"}