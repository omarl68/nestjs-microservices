{"version":3,"file":"CreateClientRole-DC0eRSqH.js","sources":["../../src/clients/roles/CreateClientRole.tsx"],"sourcesContent":["import type RoleRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { AttributeForm } from \"../../components/key-value-form/AttributeForm\";\nimport { RoleForm } from \"../../components/role-form/RoleForm\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toClient } from \"../routes/Client\";\nimport { toClientRole } from \"../routes/ClientRole\";\nimport { NewRoleParams } from \"../routes/NewRole\";\n\nexport default function CreateClientRole() {\n  const { t } = useTranslation();\n  const form = useForm<AttributeForm>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const { clientId } = useParams<NewRoleParams>();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const onSubmit: SubmitHandler<AttributeForm> = async (formValues) => {\n    const role: RoleRepresentation = {\n      ...formValues,\n      name: formValues.name?.trim(),\n      attributes: {},\n    };\n\n    try {\n      await adminClient.clients.createRole({\n        id: clientId,\n        ...role,\n      });\n\n      const createdRole = await adminClient.clients.findRole({\n        id: clientId!,\n        roleName: role.name!,\n      });\n\n      addAlert(t(\"roleCreated\"), AlertVariant.success);\n      navigate(\n        toClientRole({\n          realm,\n          clientId: clientId!,\n          id: createdRole.id!,\n          tab: \"details\",\n        }),\n      );\n    } catch (error) {\n      addError(\"roleCreateError\", error);\n    }\n  };\n\n  return (\n    <RoleForm\n      form={form}\n      onSubmit={onSubmit}\n      cancelLink={toClient({\n        realm,\n        clientId: clientId!,\n        tab: \"roles\",\n      })}\n      role=\"manage-clients\"\n      editMode={false}\n    />\n  );\n}\n"],"names":["CreateClientRole","t","useTranslation","form","useForm","navigate","useNavigate","clientId","useParams","realm","useRealm","addAlert","addError","useAlerts","jsx","RoleForm","formValues","role","adminClient","createdRole","AlertVariant","toClientRole","error","toClient"],"mappings":"wcAeA,SAAwBA,GAAmB,CACnC,KAAA,CAAE,EAAAC,GAAMC,IACRC,EAAOC,EAAuB,CAAE,KAAM,UAAY,CAAA,EAClDC,EAAWC,IACX,CAAE,SAAAC,GAAaC,IACf,CAAE,MAAAC,GAAUC,IACZ,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EAmCvC,OAAAC,EAACC,EAAA,CACC,KAAAZ,EACA,SAnC2C,MAAOa,GAAe,CACnE,MAAMC,EAA2B,CAC/B,GAAGD,EACH,KAAMA,EAAW,MAAM,KAAK,EAC5B,WAAY,CAAC,CAAA,EAGX,GAAA,CACI,MAAAE,EAAY,QAAQ,WAAW,CACnC,GAAIX,EACJ,GAAGU,CAAA,CACJ,EAED,MAAME,EAAc,MAAMD,EAAY,QAAQ,SAAS,CACrD,GAAIX,EACJ,SAAUU,EAAK,IAAA,CAChB,EAEDN,EAASV,EAAE,aAAa,EAAGmB,EAAa,OAAO,EAC/Cf,EACEgB,EAAa,CACX,MAAAZ,EACA,SAAAF,EACA,GAAIY,EAAY,GAChB,IAAK,SAAA,CACN,CAAA,QAEIG,EAAO,CACdV,EAAS,kBAAmBU,CAAK,CACnC,CAAA,EAOE,WAAYC,EAAS,CACnB,MAAAd,EACA,SAAAF,EACA,IAAK,OAAA,CACN,EACD,KAAK,iBACL,SAAU,EAAA,CAAA,CAGhB"}