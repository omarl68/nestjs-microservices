{"version":3,"file":"PermissionTab-Cqx0kVF9.js","sources":["../../src/components/permission-tab/PermissionTab.tsx"],"sourcesContent":["import type { ManagementPermissionReference } from \"@keycloak/keycloak-admin-client/lib/defs/managementPermissionReference\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Form,\n  FormGroup,\n  PageSection,\n  Switch,\n} from \"@patternfly/react-core\";\nimport {\n  ActionsColumn,\n  TableComposable,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { HelpItem } from \"ui-shared\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { toPermissionDetails } from \"../../clients/routes/PermissionDetails\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useFetch } from \"../../utils/useFetch\";\nimport useLocaleSort from \"../../utils/useLocaleSort\";\nimport { useConfirmDialog } from \"../confirm-dialog/ConfirmDialog\";\n\nimport \"./permissions-tab.css\";\n\ntype PermissionScreenType =\n  | \"clients\"\n  | \"users\"\n  | \"groups\"\n  | \"roles\"\n  | \"identityProviders\";\n\ntype PermissionsTabProps = {\n  id?: string;\n  type: PermissionScreenType;\n};\n\nexport const PermissionsTab = ({ id, type }: PermissionsTabProps) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const [realmId, setRealmId] = useState(\"\");\n  const [permission, setPermission] = useState<ManagementPermissionReference>();\n  const localeSort = useLocaleSort();\n\n  const togglePermissionEnabled = (enabled: boolean) => {\n    switch (type) {\n      case \"clients\":\n        return adminClient.clients.updateFineGrainPermission(\n          { id: id! },\n          { enabled },\n        );\n      case \"users\":\n        return adminClient.realms.updateUsersManagementPermissions({\n          realm,\n          enabled,\n        });\n      case \"groups\":\n        return adminClient.groups.updatePermission({ id: id! }, { enabled });\n      case \"roles\":\n        return adminClient.roles.updatePermission({ id: id! }, { enabled });\n      case \"identityProviders\":\n        return adminClient.identityProviders.updatePermission(\n          { alias: id! },\n          { enabled },\n        );\n    }\n  };\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.find({\n          search: true,\n          clientId: realm === \"master\" ? \"master-realm\" : \"realm-management\",\n        }),\n        (() => {\n          switch (type) {\n            case \"clients\":\n              return adminClient.clients.listFineGrainPermissions({ id: id! });\n            case \"users\":\n              return adminClient.realms.getUsersManagementPermissions({\n                realm,\n              });\n            case \"groups\":\n              return adminClient.groups.listPermissions({ id: id! });\n            case \"roles\":\n              return adminClient.roles.listPermissions({ id: id! });\n            case \"identityProviders\":\n              return adminClient.identityProviders.listPermissions({\n                alias: id!,\n              });\n          }\n        })(),\n      ]),\n    ([clients, permission]) => {\n      setRealmId(clients[0]?.id!);\n      setPermission(permission);\n    },\n    [id],\n  );\n\n  const [toggleDisableDialog, DisableConfirm] = useConfirmDialog({\n    titleKey: \"permissionsDisable\",\n    messageKey: \"permissionsDisableConfirm\",\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      const permission = await togglePermissionEnabled(false);\n      setPermission(permission);\n    },\n  });\n\n  if (!permission) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <PageSection variant=\"light\">\n      <DisableConfirm />\n      <Card isFlat>\n        <CardTitle>{t(\"permissions\")}</CardTitle>\n        <CardBody>\n          {t(`${type}PermissionsHint`)}\n          <Form isHorizontal className=\"pf-u-pt-md\">\n            <FormGroup\n              hasNoPaddingTop\n              className=\"permission-label\"\n              label={t(\"permissionsEnabled\")}\n              fieldId=\"permissionsEnabled\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"permissionsEnabledHelp\")}\n                  fieldLabelId=\"permissionsEnabled\"\n                />\n              }\n            >\n              <Switch\n                id=\"permissionsEnabled\"\n                data-testid=\"permissionSwitch\"\n                label={t(\"on\")}\n                labelOff={t(\"off\")}\n                isChecked={permission.enabled}\n                onChange={async (enabled) => {\n                  if (enabled) {\n                    const permission = await togglePermissionEnabled(enabled);\n                    setPermission(permission);\n                  } else {\n                    toggleDisableDialog();\n                  }\n                }}\n                aria-label={t(\"permissionsEnabled\")}\n              />\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n      {permission.enabled && (\n        <>\n          <Card isFlat className=\"pf-u-mt-lg\">\n            <CardTitle>{t(\"permissionsList\")}</CardTitle>\n            <CardBody>\n              <Trans i18nKey=\"permissionsListIntro\">\n                {\" \"}\n                <strong>\n                  {{\n                    realm:\n                      realm === \"master\" ? \"master-realm\" : \"realm-management\",\n                  }}\n                </strong>\n                .\n              </Trans>\n            </CardBody>\n          </Card>\n          <Card isFlat className=\"keycloak__permission__permission-table\">\n            <CardBody className=\"pf-u-p-0\">\n              <TableComposable\n                aria-label={t(\"permissionsList\")}\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th id=\"permissionsScopeName\">\n                      {t(\"permissionsScopeName\")}\n                    </Th>\n                    <Th id=\"description\">{t(\"description\")}</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {localeSort(\n                    Object.entries(permission.scopePermissions || {}),\n                    ([name]) => name,\n                  ).map(([name, id]) => (\n                    <Tr key={id}>\n                      <Td>\n                        <Link\n                          to={toPermissionDetails({\n                            realm,\n                            id: realmId,\n                            permissionType: \"scope\",\n                            permissionId: id,\n                          })}\n                        >\n                          {name}\n                        </Link>\n                      </Td>\n                      <Td>\n                        {t(`scopePermissions.${type}.${name}-description`)}\n                      </Td>\n                      <Td isActionCell>\n                        <ActionsColumn\n                          items={[\n                            {\n                              title: t(\"edit\"),\n                              onClick() {\n                                navigate(\n                                  toPermissionDetails({\n                                    realm,\n                                    id: realmId,\n                                    permissionType: \"scope\",\n                                    permissionId: id,\n                                  }),\n                                );\n                              },\n                            },\n                          ]}\n                        />\n                      </Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            </CardBody>\n          </Card>\n        </>\n      )}\n    </PageSection>\n  );\n};\n"],"names":["PermissionsTab","id","type","t","useTranslation","navigate","useNavigate","realm","useRealm","realmId","setRealmId","useState","permission","setPermission","localeSort","useLocaleSort","togglePermissionEnabled","enabled","adminClient","useFetch","clients","toggleDisableDialog","DisableConfirm","useConfirmDialog","jsxs","PageSection","jsx","Card","CardTitle","CardBody","Form","FormGroup","HelpItem","Switch","Fragment","Trans","TableComposable","Thead","Tr","Th","Tbody","name","Td","Link","toPermissionDetails","ActionsColumn","KeycloakSpinner"],"mappings":"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"}