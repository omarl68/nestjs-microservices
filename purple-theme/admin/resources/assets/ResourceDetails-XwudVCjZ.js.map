{"version":3,"file":"ResourceDetails-XwudVCjZ.js","sources":["../../src/clients/authorization/ScopePicker.tsx","../../src/clients/authorization/ResourceDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem } from \"ui-shared\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useFetch } from \"../../utils/useFetch\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\nexport const ScopePicker = ({ clientId }: { clientId: string }) => {\n  const { t } = useTranslation();\n  const { control } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search],\n  );\n\n  const renderScopes = (scopes?: ScopeRepresentation[]) =>\n    scopes?.map((option) => (\n      <SelectOption key={option.id} value={option}>\n        {option.name}\n      </SelectOption>\n    ));\n\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem helpText={t(\"clientScopesHelp\")} fieldLabelId=\"scopes\" />\n      }\n      fieldId=\"scopes\"\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId=\"scopes\"\n            variant={SelectVariant.typeaheadMulti}\n            chipGroupProps={{\n              numChips: 3,\n              expandedText: t(\"hide\"),\n              collapsedText: t(\"showRemaining\"),\n            }}\n            onToggle={setOpen}\n            isOpen={open}\n            selections={field.value.map((o: Scope) => o.name)}\n            onFilter={(_, value) => {\n              setSearch(value);\n              return renderScopes(scopes);\n            }}\n            onSelect={(_, selectedValue) => {\n              const option =\n                typeof selectedValue === \"string\"\n                  ? selectedValue\n                  : (selectedValue as Scope).name;\n              const changedValue = field.value.find(\n                (o: Scope) => o.name === option,\n              )\n                ? field.value.filter((item: Scope) => item.name !== option)\n                : [...field.value, selectedValue];\n              field.onChange(changedValue);\n            }}\n            onClear={(event) => {\n              event.stopPropagation();\n              setSearch(\"\");\n              field.onChange([]);\n            }}\n            typeAheadAriaLabel={t(\"authorizationScopes\")}\n          >\n            {renderScopes(scopes)}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n  Switch,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { HelpItem } from \"ui-shared\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useFetch } from \"../../utils/useFetch\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport { ResourceDetailsParams, toResourceDetails } from \"../routes/Resource\";\nimport { ScopePicker } from \"./ScopePicker\";\n\nimport \"./resource-details.css\";\nimport { useAccess } from \"../../context/access/Access\";\n\ntype SubmittedResource = Omit<\n  ResourceRepresentation,\n  \"attributes\" | \"scopes\"\n> & {\n  attributes: KeyValueType[];\n};\n\nexport default function ResourceDetails() {\n  const { t } = useTranslation();\n  const [client, setClient] = useState<ClientRepresentation>();\n  const [resource, setResource] = useState<ResourceRepresentation>();\n\n  const [permissions, setPermission] =\n    useState<ResourceServerRepresentation[]>();\n\n  const { addAlert, addError } = useAlerts();\n  const form = useForm<SubmittedResource>({\n    mode: \"onChange\",\n  });\n  const {\n    register,\n    formState: { errors },\n    control,\n    setValue,\n    handleSubmit,\n  } = form;\n\n  const { id, resourceId, realm } = useParams<ResourceDetailsParams>();\n  const navigate = useNavigate();\n\n  const setupForm = (resource: ResourceRepresentation = {}) => {\n    convertToFormValues(resource, setValue);\n  };\n\n  const { hasAccess } = useAccess();\n\n  const isDisabled = !hasAccess(\"manage-authorization\");\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.findOne({ id }),\n        resourceId\n          ? adminClient.clients.getResource({ id, resourceId })\n          : Promise.resolve(undefined),\n        resourceId\n          ? adminClient.clients.listPermissionsByResource({ id, resourceId })\n          : Promise.resolve(undefined),\n      ]),\n    ([client, resource, permissions]) => {\n      if (!client) {\n        throw new Error(t(\"notFound\"));\n      }\n      setClient(client);\n      setPermission(permissions);\n      setResource(resource);\n      setupForm(resource);\n    },\n    [],\n  );\n\n  const submit = async (submitted: SubmittedResource) => {\n    const resource = convertFormValuesToObject<\n      SubmittedResource,\n      ResourceRepresentation\n    >(submitted);\n\n    try {\n      if (resourceId) {\n        await adminClient.clients.updateResource({ id, resourceId }, resource);\n      } else {\n        const result = await adminClient.clients.createResource(\n          { id },\n          resource,\n        );\n        setResource(resource);\n        navigate(toResourceDetails({ realm, id, resourceId: result._id! }));\n      }\n      addAlert(\n        t((resourceId ? \"update\" : \"create\") + \"ResourceSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\"resourceSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deleteResource\",\n    children: (\n      <>\n        {t(\"deleteResourceConfirm\")}\n        {permissions?.length !== 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteResourceWarning\")}\n            className=\"pf-u-pt-lg\"\n          >\n            <p className=\"pf-u-pt-xs\">\n              {permissions?.map((permission) => (\n                <strong key={permission.id} className=\"pf-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n      </>\n    ),\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delResource({\n          id,\n          resourceId: resourceId!,\n        });\n        addAlert(t(\"resourceDeletedSuccess\"), AlertVariant.success);\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"resources\" }));\n      } catch (error) {\n        addError(\"resourceDeletedError\", error);\n      }\n    },\n  });\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={resourceId ? resource?.name! : \"createResource\"}\n        dropdownItems={\n          resourceId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  isDisabled={isDisabled}\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            className=\"keycloak__resource-details__form\"\n            onSubmit={handleSubmit(submit)}\n          >\n            <FormGroup\n              label={t(\"owner\")}\n              fieldId=\"owner\"\n              labelIcon={\n                <HelpItem helpText={t(\"ownerHelp\")} fieldLabelId=\"owner\" />\n              }\n            >\n              <KeycloakTextInput\n                id=\"owner\"\n                value={client.clientId}\n                isReadOnly\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"name\")}\n              fieldId=\"name\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"resourceNameHelp\")}\n                  fieldLabelId=\"name\"\n                />\n              }\n              helperTextInvalid={t(\"required\")}\n              validated={\n                errors.name ? ValidatedOptions.error : ValidatedOptions.default\n              }\n              isRequired\n            >\n              <KeycloakTextInput\n                id=\"name\"\n                validated={\n                  errors.name\n                    ? ValidatedOptions.error\n                    : ValidatedOptions.default\n                }\n                {...register(\"name\", { required: true })}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"displayName\")}\n              fieldId=\"displayName\"\n              labelIcon={\n                <HelpItem helpText={t(\"displayNameHelp\")} fieldLabelId=\"name\" />\n              }\n            >\n              <KeycloakTextInput\n                id=\"displayName\"\n                {...register(\"displayName\")}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"type\")}\n              fieldId=\"type\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"resourceDetailsTypeHelp\")}\n                  fieldLabelId=\"type\"\n                />\n              }\n            >\n              <KeycloakTextInput id=\"type\" {...register(\"type\")} />\n            </FormGroup>\n            <FormGroup\n              label={t(\"uris\")}\n              fieldId=\"uris\"\n              labelIcon={\n                <HelpItem helpText={t(\"urisHelp\")} fieldLabelId=\"uris\" />\n              }\n            >\n              <MultiLineInput\n                name=\"uris\"\n                type=\"url\"\n                aria-label={t(\"uris\")}\n                addButtonLabel=\"addUri\"\n              />\n            </FormGroup>\n            <ScopePicker clientId={id} />\n            <FormGroup\n              label={t(\"iconUri\")}\n              fieldId=\"iconUri\"\n              labelIcon={\n                <HelpItem helpText={t(\"iconUriHelp\")} fieldLabelId=\"iconUri\" />\n              }\n            >\n              <KeycloakTextInput\n                id=\"iconUri\"\n                type=\"url\"\n                {...register(\"icon_uri\")}\n              />\n            </FormGroup>\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"ownerManagedAccess\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"ownerManagedAccessHelp\")}\n                  fieldLabelId=\"ownerManagedAccess\"\n                />\n              }\n              fieldId=\"ownerManagedAccess\"\n            >\n              <Controller\n                name=\"ownerManagedAccess\"\n                control={control}\n                defaultValue={false}\n                render={({ field }) => (\n                  <Switch\n                    id=\"ownerManagedAccess\"\n                    label={t(\"on\")}\n                    labelOff={t(\"off\")}\n                    isChecked={field.value}\n                    onChange={field.onChange}\n                    aria-label={t(\"ownerManagedAccess\")}\n                  />\n                )}\n              />\n            </FormGroup>\n\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"resourceAttribute\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"resourceAttributeHelp\")}\n                  fieldLabelId=\"resourceAttribute\"\n                />\n              }\n              fieldId=\"resourceAttribute\"\n            >\n              <KeyValueInput name=\"attributes\" isDisabled={isDisabled} />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"resources\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopePicker","clientId","t","useTranslation","control","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","useFetch","params","adminClient","renderScopes","option","jsx","SelectOption","FormGroup","HelpItem","Controller","field","Select","SelectVariant","_","value","selectedValue","changedValue","o","item","event","ResourceDetails","client","setClient","resource","setResource","permissions","setPermission","addAlert","addError","useAlerts","form","useForm","register","errors","setValue","handleSubmit","id","resourceId","realm","useParams","navigate","useNavigate","setupForm","convertToFormValues","hasAccess","useAccess","isDisabled","submit","submitted","convertFormValuesToObject","result","toResourceDetails","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","jsxs","Fragment","Alert","permission","toAuthorizationTab","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","KeycloakTextInput","ValidatedOptions","MultiLineInput","Switch","KeyValueInput","ActionGroup","Button","ButtonVariant","props","Link","KeycloakSpinner"],"mappings":"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"}