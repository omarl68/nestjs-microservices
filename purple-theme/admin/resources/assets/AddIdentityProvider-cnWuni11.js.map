{"version":3,"file":"AddIdentityProvider-cnWuni11.js","sources":["../../src/identity-providers/add/AddIdentityProvider.tsx"],"sourcesContent":["import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useMemo } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { DynamicComponents } from \"../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { toUpperCase } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport type { IdentityProviderCreateParams } from \"../routes/IdentityProviderCreate\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { GeneralSettings } from \"./GeneralSettings\";\n\nexport default function AddIdentityProvider() {\n  const { t } = useTranslation();\n  const { providerId } = useParams<IdentityProviderCreateParams>();\n  const form = useForm<IdentityProviderRepresentation>();\n  const serverInfo = useServerInfo();\n\n  const providerInfo = useMemo(() => {\n    const namespaces = [\n      \"org.keycloak.broker.social.SocialIdentityProvider\",\n      \"org.keycloak.broker.provider.IdentityProvider\",\n    ];\n\n    for (const namespace of namespaces) {\n      const social = serverInfo.componentTypes?.[namespace]?.find(\n        ({ id }) => id === providerId,\n      );\n\n      if (social) {\n        return social;\n      }\n    }\n  }, [serverInfo, providerId]);\n\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: IdentityProviderRepresentation) => {\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId,\n        alias: providerId,\n      });\n      addAlert(t(\"createIdentityProviderSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId,\n          alias: providerId,\n          tab: \"settings\",\n        }),\n      );\n    } catch (error) {\n      addError(\"createError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\"addIdentityProvider\", {\n          provider: toUpperCase(providerId),\n        })}\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <FormProvider {...form}>\n            <GeneralSettings id={providerId} />\n            {providerInfo && (\n              <DynamicComponents\n                stringify\n                properties={providerInfo.properties}\n              />\n            )}\n          </FormProvider>\n          <ActionGroup>\n            <Button\n              isDisabled={!isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"createProvider\"\n            >\n              {t(\"add\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              data-testid=\"cancel\"\n              component={(props) => (\n                <Link {...props} to={toIdentityProviders({ realm })} />\n              )}\n            >\n              {t(\"cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["AddIdentityProvider","t","useTranslation","providerId","useParams","form","useForm","serverInfo","useServerInfo","providerInfo","useMemo","namespaces","namespace","social","id","handleSubmit","isDirty","addAlert","addError","useAlerts","navigate","useNavigate","realm","useRealm","onSubmit","provider","adminClient","AlertVariant","toIdentityProvider","error","jsxs","Fragment","jsx","ViewHeader","toUpperCase","PageSection","FormAccess","FormProvider","GeneralSettings","DynamicComponents","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"y6CAyBA,SAAwBA,IAAsB,CACtC,KAAA,CAAE,EAAAC,GAAMC,IACR,CAAE,WAAAC,GAAeC,IACjBC,EAAOC,IACPC,EAAaC,IAEbC,EAAeC,EAAQ,IAAM,CACjC,MAAMC,EAAa,CACjB,oDACA,+CAAA,EAGF,UAAWC,KAAaD,EAAY,CAClC,MAAME,EAASN,EAAW,iBAAiBK,CAAS,GAAG,KACrD,CAAC,CAAE,GAAAE,KAASA,IAAOX,CAAA,EAGrB,GAAIU,EACK,OAAAA,CAEX,CAAA,EACC,CAACN,EAAYJ,CAAU,CAAC,EAErB,CACJ,aAAAY,EACA,UAAW,CAAE,QAAAC,CAAQ,CACnB,EAAAX,EAEE,CAAE,SAAAY,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnCC,EAAWC,IACX,CAAE,MAAAC,GAAUC,IAEZC,EAAW,MAAOC,GAA6C,CAC/D,GAAA,CACI,MAAAC,EAAY,kBAAkB,OAAO,CACzC,GAAGD,EACH,WAAAtB,EACA,MAAOA,CAAA,CACR,EACDc,EAAShB,EAAE,+BAA+B,EAAG0B,EAAa,OAAO,EACjEP,EACEQ,EAAmB,CACjB,MAAAN,EACA,WAAAnB,EACA,MAAOA,EACP,IAAK,UAAA,CACN,CAAA,QAEI0B,EAAO,CACdX,EAAS,cAAeW,CAAK,CAC/B,CAAA,EAGF,OAEIC,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAA,CACC,SAAUhC,EAAE,sBAAuB,CACjC,SAAUiC,EAAY/B,CAAU,CAAA,CACjC,CAAA,CACH,EACA6B,EAACG,EAAY,CAAA,QAAQ,QACnB,SAAAL,EAACM,EAAA,CACC,KAAK,4BACL,aAAY,GACZ,SAAUrB,EAAaS,CAAQ,EAE/B,SAAA,CAACM,EAAAO,EAAA,CAAc,GAAGhC,EAChB,SAAA,CAAC2B,EAAAM,EAAA,CAAgB,GAAInC,CAAY,CAAA,EAChCM,GACCuB,EAACO,EAAA,CACC,UAAS,GACT,WAAY9B,EAAa,UAAA,CAC3B,CAAA,EAEJ,IACC+B,EACC,CAAA,SAAA,CAAAR,EAACS,EAAA,CACC,WAAY,CAACzB,EACb,QAAQ,UACR,KAAK,SACL,cAAY,iBAEX,WAAE,KAAK,CAAA,CACV,EACAgB,EAACS,EAAA,CACC,QAAQ,OACR,cAAY,SACZ,UAAYC,GACVV,EAACW,EAAM,CAAA,GAAGD,EAAO,GAAIE,EAAoB,CAAE,MAAAtB,CAAM,CAAC,CAAG,CAAA,EAGtD,WAAE,QAAQ,CAAA,CACb,CAAA,EACF,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}