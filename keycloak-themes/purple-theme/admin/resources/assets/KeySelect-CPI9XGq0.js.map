{"version":3,"file":"KeySelect-CPI9XGq0.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ActionList/action-list.mjs","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionList.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionListItem.js","../../src/components/key-value-form/KeySelect.tsx"],"sourcesContent":["import './action-list.css';\nexport default {\n  \"actionList\": \"pf-c-action-list\",\n  \"actionListGroup\": \"pf-c-action-list__group\",\n  \"modifiers\": {\n    \"icons\": \"pf-m-icons\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ActionList/action-list';\nexport const ActionList = (_a) => {\n    var { children, isIconList, className = '' } = _a, props = __rest(_a, [\"children\", \"isIconList\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.actionList, isIconList && styles.modifiers.icons, className) }, props), children));\n};\nActionList.displayName = 'ActionList';\n//# sourceMappingURL=ActionList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport const ActionListItem = (_a) => {\n    var { children, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css('pf-c-action-list__item', className) }, props), children));\n};\nActionListItem.displayName = 'ActionListItem';\n//# sourceMappingURL=ActionListItem.js.map","import { Grid, GridItem, Select, SelectOption } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { UseControllerProps, useController } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { KeycloakTextInput } from \"ui-shared\";\nimport useToggle from \"../../utils/useToggle\";\nimport { DefaultValue } from \"./KeyValueInput\";\n\ntype KeySelectProp = UseControllerProps & {\n  selectItems: DefaultValue[];\n};\n\nexport const KeySelect = ({ selectItems, ...rest }: KeySelectProp) => {\n  const { t } = useTranslation();\n  const [open, toggle] = useToggle();\n  const { field } = useController(rest);\n  const [custom, setCustom] = useState(\n    !selectItems.map(({ key }) => key).includes(field.value),\n  );\n\n  return (\n    <Grid>\n      <GridItem lg={custom ? 2 : 12}>\n        <Select\n          onToggle={() => toggle()}\n          isOpen={open}\n          onSelect={(_, value) => {\n            if (value) {\n              setCustom(false);\n            }\n            field.onChange(value);\n            toggle();\n          }}\n          selections={!custom ? [field.value] : \"\"}\n        >\n          {[\n            <SelectOption key=\"custom\" onClick={() => setCustom(true)}>\n              {t(\"customAttribute\")}\n            </SelectOption>,\n            ...selectItems.map((item) => (\n              <SelectOption key={item.key} value={item.key}>\n                {item.label}\n              </SelectOption>\n            )),\n          ]}\n        </Select>\n      </GridItem>\n      {custom && (\n        <GridItem lg={10}>\n          <KeycloakTextInput\n            id=\"customValue\"\n            data-testid={rest.name}\n            placeholder={t(\"keyPlaceholder\")}\n            value={field.value}\n            onChange={field.onChange}\n            autoFocus\n          />\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n"],"names":["styles","ActionList","_a","children","isIconList","className","props","__rest","React","css","ActionListItem","KeySelect","selectItems","rest","useTranslation","open","toggle","useToggle","field","useController","custom","setCustom","useState","key","Grid","jsx","GridItem","Select","_","value","SelectOption","item","KeycloakTextInput"],"mappings":"2PACA,MAAeA,EAAA,CACb,WAAc,mBACd,gBAAmB,0BACnB,UAAa,CACX,MAAS,YACV,CACH,ECHaC,EAAcC,GAAO,CAC9B,GAAI,CAAE,SAAAC,EAAU,WAAAC,EAAY,UAAAC,EAAY,EAAI,EAAGH,EAAII,EAAQC,EAAOL,EAAI,CAAC,WAAY,aAAc,WAAW,CAAC,EAC7G,OAAQM,EAAM,cAAc,MAAO,OAAO,OAAO,CAAE,UAAWC,EAAIT,EAAO,WAAYI,GAAcJ,EAAO,UAAU,MAAOK,CAAS,GAAKC,CAAK,EAAGH,CAAQ,CAC7J,EACAF,EAAW,YAAc,aCLb,MAACS,EAAkBR,GAAO,CAClC,GAAI,CAAE,SAAAC,EAAU,UAAAE,EAAY,EAAI,EAAGH,EAAII,EAAQC,EAAOL,EAAI,CAAC,WAAY,WAAW,CAAC,EACnF,OAAQM,EAAM,cAAc,MAAO,OAAO,OAAO,CAAE,UAAWC,EAAI,yBAA0BJ,CAAS,CAAC,EAAIC,CAAK,EAAGH,CAAQ,CAC9H,EACAO,EAAe,YAAc,iBCKtB,MAAMC,EAAY,CAAC,CAAE,YAAAC,EAAa,GAAGC,KAA0B,CAC9D,KAAA,CAAE,GAAMC,IACR,CAACC,EAAMC,CAAM,EAAIC,EAAU,EAC3B,CAAE,MAAAC,CAAA,EAAUC,EAAcN,CAAI,EAC9B,CAACO,EAAQC,CAAS,EAAIC,EAC1B,CAACV,EAAY,IAAI,CAAC,CAAE,IAAAW,CAAI,IAAMA,CAAG,EAAE,SAASL,EAAM,KAAK,CAAA,EAGzD,SACGM,EACC,CAAA,SAAA,CAAAC,EAACC,EAAS,CAAA,GAAIN,EAAS,EAAI,GACzB,SAAAK,EAACE,EAAA,CACC,SAAU,IAAMX,EAAO,EACvB,OAAQD,EACR,SAAU,CAACa,EAAGC,IAAU,CAClBA,GACFR,EAAU,EAAK,EAEjBH,EAAM,SAASW,CAAK,EACbb,GACT,EACA,WAAaI,EAAyB,GAAhB,CAACF,EAAM,KAAK,EAEjC,SAAA,CACCO,EAACK,EAA0B,CAAA,QAAS,IAAMT,EAAU,EAAI,EACrD,SAAA,EAAE,iBAAiB,CAAA,EADJ,QAElB,EACA,GAAGT,EAAY,IAAKmB,GACjBN,EAAAK,EAAA,CAA4B,MAAOC,EAAK,IACtC,SAAAA,EAAK,KADW,EAAAA,EAAK,GAExB,CACD,CACH,CAAA,CAAA,EAEJ,EACCX,GACCK,EAACC,EAAS,CAAA,GAAI,GACZ,SAAAD,EAACO,EAAA,CACC,GAAG,cACH,cAAanB,EAAK,KAClB,YAAa,EAAE,gBAAgB,EAC/B,MAAOK,EAAM,MACb,SAAUA,EAAM,SAChB,UAAS,EAAA,CAAA,EAEb,CAEJ,CAAA,CAAA,CAEJ","x_google_ignoreList":[0,1,2]}