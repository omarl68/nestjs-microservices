{"version":3,"file":"ViewHeader-cxZm8XhN.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Level/level.mjs","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Level/Level.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Level/LevelItem.js","../../src/components/external-link/FormattedLink.tsx","../../src/components/view-header/ViewHeader.tsx"],"sourcesContent":["import './level.css';\nexport default {\n  \"level\": \"pf-l-level\",\n  \"modifiers\": {\n    \"gutter\": \"pf-m-gutter\"\n  }\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Level/level';\nexport const Level = (_a) => {\n    var { hasGutter, className = '', children = null } = _a, props = __rest(_a, [\"hasGutter\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.level, hasGutter && styles.modifiers.gutter, className) }), children));\n};\nLevel.displayName = 'Level';\n//# sourceMappingURL=Level.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const LevelItem = (_a) => {\n    var { children = null } = _a, props = __rest(_a, [\"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props), children));\n};\nLevelItem.displayName = 'LevelItem';\n//# sourceMappingURL=LevelItem.js.map","import { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\nimport { AnchorHTMLAttributes } from \"react\";\n\nexport type FormattedLinkProps = AnchorHTMLAttributes<HTMLAnchorElement> & {\n  isInline?: boolean;\n};\n\nexport const FormattedLink = ({\n  title,\n  href,\n  isInline,\n  ...rest\n}: FormattedLinkProps) => {\n  return (\n    <a\n      href={href}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      className={isInline ? \"pf-m-link pf-m-inline\" : \"\"}\n      {...rest}\n    >\n      {title ? title : href}{\" \"}\n      {href?.startsWith(\"http\") && <ExternalLinkAltIcon />}\n    </a>\n  );\n};\n","import {\n  Badge,\n  Button,\n  Divider,\n  Dropdown,\n  DropdownPosition,\n  DropdownToggle,\n  Level,\n  LevelItem,\n  PageSection,\n  Switch,\n  Text,\n  TextContent,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport {\n  ReactElement,\n  ReactNode,\n  useState,\n  isValidElement,\n  Fragment,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormattedLink } from \"../external-link/FormattedLink\";\nimport { useHelp, HelpItem } from \"ui-shared\";\nimport \"../../help-urls\";\n\nexport type ViewHeaderProps = {\n  titleKey: string;\n  className?: string;\n  badges?: ViewHeaderBadge[];\n  isDropdownDisabled?: boolean;\n  subKey?: string | ReactNode;\n  actionsDropdownId?: string;\n  helpUrl?: string | undefined;\n  dropdownItems?: ReactElement[];\n  lowerDropdownItems?: any;\n  lowerDropdownMenuTitle?: any;\n  lowerButton?: any;\n  isEnabled?: boolean;\n  onToggle?: (value: boolean) => void;\n  divider?: boolean;\n  helpTextKey?: string;\n  isReadOnly?: boolean;\n};\n\nexport type ViewHeaderBadge = {\n  id?: string;\n  text?: string | ReactNode;\n  readonly?: boolean;\n};\n\nexport const ViewHeader = ({\n  actionsDropdownId,\n  className,\n  titleKey,\n  badges,\n  isDropdownDisabled,\n  subKey,\n  helpUrl,\n  dropdownItems,\n  lowerDropdownMenuTitle,\n  lowerDropdownItems,\n  lowerButton,\n  isEnabled = true,\n  onToggle,\n  divider = true,\n  helpTextKey,\n  isReadOnly = false,\n}: ViewHeaderProps) => {\n  const { t, i18n } = useTranslation();\n  const { enabled } = useHelp();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isLowerDropdownOpen, setIsLowerDropdownOpen] = useState(false);\n\n  const onDropdownToggle = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  const onLowerDropdownToggle = () => {\n    setIsLowerDropdownOpen(!isLowerDropdownOpen);\n  };\n\n  const toKey = (value: string) => value.replace(/\\s/g, \"-\");\n\n  return (\n    <>\n      <PageSection variant=\"light\">\n        <Level hasGutter>\n          <LevelItem>\n            <Level>\n              <LevelItem>\n                <TextContent className=\"pf-u-mr-sm\">\n                  <Text\n                    className={className}\n                    component=\"h1\"\n                    data-testid=\"view-header\"\n                  >\n                    {i18n.exists(titleKey) ? t(titleKey) : titleKey}\n                  </Text>\n                </TextContent>\n              </LevelItem>\n              {badges && (\n                <LevelItem>\n                  {badges.map((badge, index) => (\n                    <Fragment key={index}>\n                      {!isValidElement(badge.text) && (\n                        <Fragment key={badge.text as string}>\n                          <Badge data-testid={badge.id} isRead={badge.readonly}>\n                            {badge.text}\n                          </Badge>{\" \"}\n                        </Fragment>\n                      )}\n                      {isValidElement(badge.text) && badge.text}{\" \"}\n                    </Fragment>\n                  ))}\n                </LevelItem>\n              )}\n            </Level>\n          </LevelItem>\n          <LevelItem>\n            <Toolbar className=\"pf-u-p-0\">\n              <ToolbarContent>\n                {onToggle && (\n                  <ToolbarItem>\n                    <Switch\n                      id={`${toKey(titleKey)}-switch`}\n                      data-testid={`${titleKey}-switch`}\n                      label={t(\"enabled\")}\n                      labelOff={t(\"disabled\")}\n                      className=\"pf-u-mr-lg\"\n                      isDisabled={isReadOnly}\n                      isChecked={isEnabled}\n                      aria-label={t(\"enabled\")}\n                      onChange={(value) => {\n                        onToggle(value);\n                      }}\n                    />\n                    {helpTextKey && (\n                      <HelpItem\n                        helpText={t(helpTextKey)}\n                        fieldLabelId={`${toKey(titleKey)}-switch`}\n                      />\n                    )}\n                  </ToolbarItem>\n                )}\n                {dropdownItems && (\n                  <ToolbarItem>\n                    <Dropdown\n                      position={DropdownPosition.right}\n                      toggle={\n                        <DropdownToggle\n                          isDisabled={isDropdownDisabled}\n                          id={actionsDropdownId}\n                          onToggle={onDropdownToggle}\n                        >\n                          {t(\"action\")}\n                        </DropdownToggle>\n                      }\n                      isOpen={isDropdownOpen}\n                      dropdownItems={dropdownItems}\n                      data-testid=\"action-dropdown\"\n                    />\n                  </ToolbarItem>\n                )}\n              </ToolbarContent>\n            </Toolbar>\n          </LevelItem>\n        </Level>\n        {enabled && (\n          <TextContent id=\"view-header-subkey\">\n            <Text>\n              {isValidElement(subKey)\n                ? subKey\n                : subKey\n                  ? t(subKey as string)\n                  : \"\"}\n              {helpUrl && (\n                <FormattedLink\n                  title={t(\"learnMore\")}\n                  href={helpUrl}\n                  isInline\n                  className=\"pf-u-ml-md\"\n                />\n              )}\n            </Text>\n          </TextContent>\n        )}\n        {lowerDropdownItems && (\n          <Dropdown\n            className=\"keycloak__user-federation__dropdown\"\n            toggle={\n              <DropdownToggle\n                onToggle={() => onLowerDropdownToggle()}\n                isPrimary\n                id=\"ufToggleId\"\n              >\n                {t(lowerDropdownMenuTitle)}\n              </DropdownToggle>\n            }\n            isOpen={isLowerDropdownOpen}\n            dropdownItems={lowerDropdownItems}\n          />\n        )}\n        {lowerButton && (\n          <Button\n            variant={lowerButton.variant}\n            onClick={lowerButton.onClick}\n            data-testid=\"viewHeader-lower-btn\"\n          >\n            {lowerButton.lowerButtonTitle}\n          </Button>\n        )}\n      </PageSection>\n      {divider && <Divider component=\"div\" />}\n    </>\n  );\n};\n"],"names":["styles","Level","_a","hasGutter","className","children","props","__rest","React","css","LevelItem","FormattedLink","title","href","isInline","rest","jsxs","ExternalLinkAltIcon","ViewHeader","actionsDropdownId","titleKey","badges","isDropdownDisabled","subKey","helpUrl","dropdownItems","lowerDropdownMenuTitle","lowerDropdownItems","lowerButton","isEnabled","onToggle","divider","helpTextKey","isReadOnly","t","i18n","useTranslation","enabled","useHelp","isDropdownOpen","setDropdownOpen","useState","isLowerDropdownOpen","setIsLowerDropdownOpen","onDropdownToggle","onLowerDropdownToggle","toKey","value","Fragment","PageSection","jsx","TextContent","Text","badge","index","isValidElement","Badge","Toolbar","ToolbarContent","ToolbarItem","Switch","HelpItem","Dropdown","DropdownPosition","DropdownToggle","Button","Divider"],"mappings":"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","x_google_ignoreList":[0,1,2]}