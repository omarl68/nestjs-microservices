{"version":3,"file":"PermissionDetails-B4Hadp3r.js","sources":["../../src/clients/authorization/ScopeSelect.tsx","../../src/clients/authorization/PermissionDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { useRef, useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useFetch } from \"../../utils/useFetch\";\n\ntype ScopeSelectProps = {\n  clientId: string;\n  resourceId?: string;\n  preSelected?: string;\n};\n\nexport const ScopeSelect = ({\n  clientId,\n  resourceId,\n  preSelected,\n}: ScopeSelectProps) => {\n  const { t } = useTranslation();\n\n  const {\n    control,\n    getValues,\n    setValue,\n    formState: { errors },\n  } = useFormContext();\n\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>([]);\n  const [selectedScopes, setSelectedScopes] = useState<ScopeRepresentation[]>(\n    [],\n  );\n  const [search, setSearch] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const firstUpdate = useRef(true);\n\n  const values: string[] | undefined = getValues(\"scopes\");\n\n  const toSelectOptions = (scopes: ScopeRepresentation[]) =>\n    scopes.map((scope) => (\n      <SelectOption key={scope.id} value={scope}>\n        {scope.name}\n      </SelectOption>\n    ));\n\n  useFetch(\n    async (): Promise<ScopeRepresentation[]> => {\n      if (!resourceId) {\n        return adminClient.clients.listAllScopes(\n          Object.assign(\n            { id: clientId, deep: false },\n            search === \"\" ? null : { name: search },\n          ),\n        );\n      }\n\n      if (resourceId && !firstUpdate.current) {\n        setValue(\"scopes\", []);\n      }\n\n      firstUpdate.current = false;\n      return adminClient.clients.listScopesByResource({\n        id: clientId,\n        resourceName: resourceId,\n      });\n    },\n    (scopes) => {\n      setScopes(scopes);\n      if (!search)\n        setSelectedScopes(\n          scopes.filter((s: ScopeRepresentation) => values?.includes(s.id!)),\n        );\n    },\n    [resourceId, search],\n  );\n\n  return (\n    <Controller\n      name=\"scopes\"\n      defaultValue={preSelected ? [preSelected] : []}\n      control={control}\n      rules={{ validate: (value) => value.length > 0 }}\n      render={({ field }) => (\n        <Select\n          toggleId=\"scopes\"\n          variant={SelectVariant.typeaheadMulti}\n          onToggle={setOpen}\n          onFilter={(_, filter) => {\n            setSearch(filter);\n            return toSelectOptions(scopes);\n          }}\n          onClear={() => {\n            field.onChange([]);\n            setSearch(\"\");\n          }}\n          selections={selectedScopes.map((s) => s.name)}\n          onSelect={(_, selectedValue) => {\n            const option =\n              typeof selectedValue === \"string\"\n                ? selectedScopes.find((s) => s.name === selectedValue)!\n                : (selectedValue as ScopeRepresentation);\n            const changedValue = selectedScopes.find((p) => p.id === option.id)\n              ? selectedScopes.filter((p) => p.id !== option.id)\n              : [...selectedScopes, option];\n\n            field.onChange(changedValue.map((s) => s.id));\n            setSelectedScopes(changedValue);\n            setSearch(\"\");\n          }}\n          isOpen={open}\n          aria-labelledby={t(\"scopes\")}\n          validated={errors.scopes ? \"error\" : \"default\"}\n          isDisabled={!!preSelected}\n          typeAheadAriaLabel={t(\"scopes\")}\n        >\n          {toSelectOptions(scopes)}\n        </Select>\n      )}\n    />\n  );\n};\n","import type PolicyRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/policyRepresentation\";\nimport { DecisionStrategy } from \"@keycloak/keycloak-admin-client/lib/defs/policyRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n  Radio,\n  SelectVariant,\n  Switch,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { HelpItem } from \"ui-shared\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { KeycloakTextArea } from \"../../components/keycloak-text-area/KeycloakTextArea\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useFetch } from \"../../utils/useFetch\";\nimport { toUpperCase } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport type { NewPermissionParams } from \"../routes/NewPermission\";\nimport {\n  PermissionDetailsParams,\n  toPermissionDetails,\n} from \"../routes/PermissionDetails\";\nimport { ResourcesPolicySelect } from \"./ResourcesPolicySelect\";\nimport { ScopeSelect } from \"./ScopeSelect\";\nimport { useAccess } from \"../../context/access/Access\";\n\ntype FormFields = PolicyRepresentation & {\n  resourceType: string;\n};\n\nexport default function PermissionDetails() {\n  const { t } = useTranslation();\n\n  const form = useForm<FormFields>({\n    mode: \"onChange\",\n  });\n  const {\n    register,\n    control,\n    reset,\n    formState: { errors },\n    handleSubmit,\n  } = form;\n\n  const navigate = useNavigate();\n  const { id, realm, permissionType, permissionId, selectedId } = useParams<\n    NewPermissionParams & PermissionDetailsParams\n  >();\n\n  const { addAlert, addError } = useAlerts();\n  const [permission, setPermission] = useState<PolicyRepresentation>();\n  const [applyToResourceTypeFlag, setApplyToResourceTypeFlag] = useState(false);\n  const { hasAccess } = useAccess();\n\n  const isDisabled = !hasAccess(\"manage-authorization\");\n\n  useFetch(\n    async () => {\n      if (!permissionId) {\n        return {};\n      }\n      const [permission, resources, policies, scopes] = await Promise.all([\n        adminClient.clients.findOnePermission({\n          id,\n          type: permissionType,\n          permissionId,\n        }),\n        adminClient.clients.getAssociatedResources({\n          id,\n          permissionId,\n        }),\n        adminClient.clients.getAssociatedPolicies({\n          id,\n          permissionId,\n        }),\n        adminClient.clients.getAssociatedScopes({\n          id,\n          permissionId,\n        }),\n      ]);\n\n      if (!permission) {\n        throw new Error(t(\"notFound\"));\n      }\n\n      return {\n        permission,\n        resources: resources.map((r) => r._id),\n        policies: policies.map((p) => p.id!),\n        scopes: scopes.map((s) => s.id!),\n      };\n    },\n    ({ permission, resources, policies, scopes }) => {\n      reset({ ...permission, resources, policies, scopes });\n      if (permission && \"resourceType\" in permission) {\n        setApplyToResourceTypeFlag(\n          !!(permission as { resourceType: string }).resourceType,\n        );\n      }\n      setPermission({ ...permission, resources, policies });\n    },\n    [],\n  );\n\n  const save = async (permission: PolicyRepresentation) => {\n    try {\n      if (permissionId) {\n        await adminClient.clients.updatePermission(\n          { id, type: permissionType, permissionId },\n          permission,\n        );\n      } else {\n        const result = await adminClient.clients.createPermission(\n          { id, type: permissionType },\n          permission,\n        );\n        setPermission(result);\n        navigate(\n          toPermissionDetails({\n            realm,\n            id,\n            permissionType,\n            permissionId: result.id!,\n          }),\n        );\n      }\n      addAlert(\n        t((permissionId ? \"update\" : \"create\") + \"PermissionSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\"permissionSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deletePermission\",\n    messageKey: t(\"deletePermissionConfirm\", {\n      permission: permission?.name,\n    }),\n    continueButtonVariant: ButtonVariant.danger,\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delPermission({\n          id,\n          type: permissionType,\n          permissionId: permissionId,\n        });\n        addAlert(t(\"permissionDeletedSuccess\"), AlertVariant.success);\n        navigate(\n          toAuthorizationTab({ realm, clientId: id, tab: \"permissions\" }),\n        );\n      } catch (error) {\n        addError(\"permissionDeletedError\", error);\n      }\n    },\n  });\n\n  const resourcesIds = useWatch({\n    control,\n    name: \"resources\",\n    defaultValue: [],\n  });\n\n  if (!permission) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={\n          permissionId\n            ? permission.name!\n            : `create${toUpperCase(permissionType)}BasedPermission`\n        }\n        dropdownItems={\n          permissionId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  isDisabled={isDisabled}\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          role=\"manage-authorization\"\n          onSubmit={handleSubmit(save)}\n        >\n          <FormProvider {...form}>\n            <FormGroup\n              label={t(\"name\")}\n              isRequired\n              helperTextInvalid={t(\"required\")}\n              validated={errors.name ? \"error\" : \"default\"}\n              fieldId=\"name\"\n              labelIcon={\n                <HelpItem helpText={t(\"permissionName\")} fieldLabelId=\"name\" />\n              }\n            >\n              <KeycloakTextInput\n                id=\"name\"\n                validated={errors.name ? \"error\" : \"default\"}\n                {...register(\"name\", { required: true })}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"description\")}\n              fieldId=\"description\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"permissionDescription\")}\n                  fieldLabelId=\"description\"\n                />\n              }\n              validated={errors.description ? \"error\" : \"default\"}\n              helperTextInvalid={errors.description?.message}\n            >\n              <KeycloakTextArea\n                id=\"description\"\n                validated={errors.description ? \"error\" : \"default\"}\n                {...register(\"description\", {\n                  maxLength: {\n                    value: 255,\n                    message: t(\"maxLength\", { length: 255 }),\n                  },\n                })}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"applyToResourceTypeFlag\")}\n              fieldId=\"applyToResourceTypeFlag\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"applyToResourceTypeFlagHelp\")}\n                  fieldLabelId=\"applyToResourceTypeFlag\"\n                />\n              }\n            >\n              <Switch\n                id=\"applyToResourceTypeFlag\"\n                name=\"applyToResourceTypeFlag\"\n                label={t(\"on\")}\n                labelOff={t(\"off\")}\n                isChecked={applyToResourceTypeFlag}\n                onChange={setApplyToResourceTypeFlag}\n                aria-label={t(\"applyToResourceTypeFlag\")}\n              />\n            </FormGroup>\n            {applyToResourceTypeFlag ? (\n              <FormGroup\n                label={t(\"resourceType\")}\n                fieldId=\"resourceType\"\n                labelIcon={\n                  <HelpItem\n                    helpText={t(\"resourceTypeHelp\")}\n                    fieldLabelId=\"resourceType\"\n                  />\n                }\n                isRequired={permissionType === \"scope\"}\n              >\n                <KeycloakTextInput\n                  id=\"resourceType\"\n                  {...register(\"resourceType\", {\n                    required: permissionType === \"scope\",\n                  })}\n                />\n              </FormGroup>\n            ) : (\n              <FormGroup\n                label={t(\"resource\")}\n                fieldId=\"resources\"\n                labelIcon={\n                  <HelpItem\n                    helpText={t(\"permissionResources\")}\n                    fieldLabelId=\"resources\"\n                  />\n                }\n                helperTextInvalid={t(\"required\")}\n                validated={errors.resources ? \"error\" : \"default\"}\n                isRequired={permissionType !== \"scope\"}\n              >\n                <ResourcesPolicySelect\n                  name=\"resources\"\n                  clientId={id}\n                  permissionId={permissionId}\n                  preSelected={\n                    permissionType === \"scope\" ? undefined : selectedId\n                  }\n                  variant={\n                    permissionType === \"scope\"\n                      ? SelectVariant.typeahead\n                      : SelectVariant.typeaheadMulti\n                  }\n                  isRequired={permissionType !== \"scope\"}\n                />\n              </FormGroup>\n            )}\n            {permissionType === \"scope\" && (\n              <FormGroup\n                label={t(\"authorizationScopes\")}\n                fieldId=\"scopes\"\n                labelIcon={\n                  <HelpItem\n                    helpText={t(\"permissionScopesHelp\")}\n                    fieldLabelId=\"scopesSelect\"\n                  />\n                }\n                helperTextInvalid={t(\"required\")}\n                validated={errors.scopes ? \"error\" : \"default\"}\n                isRequired\n              >\n                <ScopeSelect\n                  clientId={id}\n                  resourceId={resourcesIds?.[0]}\n                  preSelected={selectedId}\n                />\n              </FormGroup>\n            )}\n            <FormGroup\n              label={t(\"policies\")}\n              fieldId=\"policies\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"permissionPoliciesHelp\")}\n                  fieldLabelId=\"policies\"\n                />\n              }\n            >\n              <ResourcesPolicySelect\n                name=\"policies\"\n                clientId={id}\n                permissionId={permissionId}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"decisionStrategy\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"permissionDecisionStrategyHelp\")}\n                  fieldLabelId=\"decisionStrategy\"\n                />\n              }\n              fieldId=\"policyEnforcementMode\"\n              hasNoPaddingTop\n            >\n              <Controller\n                name=\"decisionStrategy\"\n                data-testid=\"decisionStrategy\"\n                defaultValue={DecisionStrategy.UNANIMOUS}\n                control={control}\n                render={({ field }) => (\n                  <>\n                    {Object.values(DecisionStrategy).map((strategy) => (\n                      <Radio\n                        id={strategy}\n                        key={strategy}\n                        data-testid={strategy}\n                        isChecked={field.value === strategy}\n                        isDisabled={isDisabled}\n                        name=\"decisionStrategies\"\n                        onChange={() => field.onChange(strategy)}\n                        label={t(`decisionStrategies.${strategy}`)}\n                        className=\"pf-u-mb-md\"\n                      />\n                    ))}\n                  </>\n                )}\n              />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"permissions\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormProvider>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopeSelect","clientId","resourceId","preSelected","t","useTranslation","control","getValues","setValue","errors","useFormContext","scopes","setScopes","useState","selectedScopes","setSelectedScopes","search","setSearch","open","setOpen","firstUpdate","useRef","values","toSelectOptions","scope","jsx","SelectOption","useFetch","adminClient","s","Controller","value","field","Select","SelectVariant","_","filter","selectedValue","option","changedValue","p","PermissionDetails","form","useForm","register","reset","handleSubmit","navigate","useNavigate","id","realm","permissionType","permissionId","selectedId","useParams","addAlert","addError","useAlerts","permission","setPermission","applyToResourceTypeFlag","setApplyToResourceTypeFlag","hasAccess","useAccess","isDisabled","resources","policies","r","save","result","toPermissionDetails","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","toAuthorizationTab","resourcesIds","useWatch","jsxs","Fragment","ViewHeader","toUpperCase","DropdownItem","PageSection","FormAccess","FormProvider","FormGroup","HelpItem","KeycloakTextInput","KeycloakTextArea","Switch","ResourcesPolicySelect","DecisionStrategy","strategy","Radio","ActionGroup","Button","props","Link","KeycloakSpinner"],"mappings":"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"}