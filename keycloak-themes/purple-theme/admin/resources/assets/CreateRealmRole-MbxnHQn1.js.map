{"version":3,"file":"CreateRealmRole-MbxnHQn1.js","sources":["../../src/realm-roles/CreateRealmRole.tsx"],"sourcesContent":["import type RoleRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { adminClient } from \"../admin-client\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { AttributeForm } from \"../components/key-value-form/AttributeForm\";\nimport { RoleForm } from \"../components/role-form/RoleForm\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { toRealmRole } from \"./routes/RealmRole\";\nimport { toRealmRoles } from \"./routes/RealmRoles\";\n\nexport default function CreateRealmRole() {\n  const { t } = useTranslation();\n  const form = useForm<AttributeForm>({ mode: \"onChange\" });\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const onSubmit: SubmitHandler<AttributeForm> = async (formValues) => {\n    const role: RoleRepresentation = {\n      ...formValues,\n      name: formValues.name?.trim(),\n      attributes: {},\n    };\n\n    try {\n      await adminClient.roles.create(role);\n\n      const createdRole = await adminClient.roles.findOneByName({\n        name: formValues.name!,\n      });\n\n      if (!createdRole) {\n        throw new Error(t(\"notFound\"));\n      }\n\n      addAlert(t(\"roleCreated\"), AlertVariant.success);\n      navigate(toRealmRole({ realm, id: createdRole.id!, tab: \"details\" }));\n    } catch (error) {\n      addError(\"roleCreateError\", error);\n    }\n  };\n\n  return (\n    <RoleForm\n      form={form}\n      onSubmit={onSubmit}\n      cancelLink={toRealmRoles({ realm })}\n      role=\"manage-realm\"\n      editMode={false}\n    />\n  );\n}\n"],"names":["CreateRealmRole","t","useTranslation","form","useForm","navigate","useNavigate","realm","useRealm","addAlert","addError","useAlerts","jsx","RoleForm","formValues","role","adminClient","createdRole","AlertVariant","toRealmRole","error","toRealmRoles"],"mappings":"scAcA,SAAwBA,GAAkB,CAClC,KAAA,CAAE,EAAAC,GAAMC,IACRC,EAAOC,EAAuB,CAAE,KAAM,UAAY,CAAA,EAClDC,EAAWC,IACX,CAAE,MAAAC,GAAUC,IACZ,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EA4BvC,OAAAC,EAACC,EAAA,CACC,KAAAV,EACA,SA5B2C,MAAOW,GAAe,CACnE,MAAMC,EAA2B,CAC/B,GAAGD,EACH,KAAMA,EAAW,MAAM,KAAK,EAC5B,WAAY,CAAC,CAAA,EAGX,GAAA,CACI,MAAAE,EAAY,MAAM,OAAOD,CAAI,EAEnC,MAAME,EAAc,MAAMD,EAAY,MAAM,cAAc,CACxD,KAAMF,EAAW,IAAA,CAClB,EAED,GAAI,CAACG,EACH,MAAM,IAAI,MAAMhB,EAAE,UAAU,CAAC,EAG/BQ,EAASR,EAAE,aAAa,EAAGiB,EAAa,OAAO,EACtCb,EAAAc,EAAY,CAAE,MAAAZ,EAAO,GAAIU,EAAY,GAAK,IAAK,SAAW,CAAA,CAAC,QAC7DG,EAAO,CACdV,EAAS,kBAAmBU,CAAK,CACnC,CAAA,EAOE,WAAYC,EAAa,CAAE,MAAAd,EAAO,EAClC,KAAK,eACL,SAAU,EAAA,CAAA,CAGhB"}