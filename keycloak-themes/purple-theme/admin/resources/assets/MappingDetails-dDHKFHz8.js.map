{"version":3,"file":"MappingDetails-dDHKFHz8.js","sources":["../../src/client-scopes/details/MappingDetails.tsx"],"sourcesContent":["import type ProtocolMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/protocolMapperRepresentation\";\nimport type { ProtocolMapperTypeRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/serverInfoRepesentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useMatch, useNavigate } from \"react-router-dom\";\nimport { KeycloakTextInput, TextControl } from \"ui-shared\";\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { DynamicComponents } from \"../../components/dynamic/DynamicComponents\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useFetch } from \"../../utils/useFetch\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toClientScope } from \"../routes/ClientScope\";\nimport { MapperParams, MapperRoute } from \"../routes/Mapper\";\nimport { toDedicatedScope } from \"../../clients/routes/DedicatedScopeDetails\";\n\nexport default function MappingDetails() {\n  const { t } = useTranslation();\n  const { addAlert, addError } = useAlerts();\n\n  const { id, mapperId } = useParams<MapperParams>();\n  const form = useForm();\n  const { setValue, handleSubmit } = form;\n  const [mapping, setMapping] = useState<ProtocolMapperTypeRepresentation>();\n  const [config, setConfig] = useState<{\n    protocol?: string;\n    protocolMapper?: string;\n  }>();\n\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const serverInfo = useServerInfo();\n  const isGuid = /^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/;\n  const isUpdating = !!mapperId.match(isGuid);\n\n  const isOnClientScope = !!useMatch(MapperRoute.path);\n  const toDetails = () =>\n    isOnClientScope\n      ? toClientScope({ realm, id, tab: \"mappers\" })\n      : toDedicatedScope({ realm, clientId: id, tab: \"mappers\" });\n\n  useFetch(\n    async () => {\n      let data: ProtocolMapperRepresentation | undefined;\n      if (isUpdating) {\n        if (isOnClientScope) {\n          data = await adminClient.clientScopes.findProtocolMapper({\n            id,\n            mapperId,\n          });\n        } else {\n          data = await adminClient.clients.findProtocolMapperById({\n            id,\n            mapperId,\n          });\n        }\n        if (!data) {\n          throw new Error(t(\"notFound\"));\n        }\n\n        const mapperTypes = serverInfo.protocolMapperTypes![data!.protocol!];\n        const mapping = mapperTypes.find(\n          (type) => type.id === data!.protocolMapper,\n        );\n\n        return {\n          config: {\n            protocol: data.protocol,\n            protocolMapper: data.protocolMapper,\n          },\n          mapping,\n          data,\n        };\n      } else {\n        const model = isOnClientScope\n          ? await adminClient.clientScopes.findOne({ id })\n          : await adminClient.clients.findOne({ id });\n        if (!model) {\n          throw new Error(t(\"notFound\"));\n        }\n        const protocolMappers =\n          serverInfo.protocolMapperTypes![model.protocol!];\n        const mapping = protocolMappers.find(\n          (mapper) => mapper.id === mapperId,\n        );\n        if (!mapping) {\n          throw new Error(t(\"notFound\"));\n        }\n        return {\n          mapping,\n          config: {\n            protocol: model.protocol,\n            protocolMapper: mapperId,\n          },\n        };\n      }\n    },\n    ({ config, mapping, data }) => {\n      setConfig(config);\n      setMapping(mapping);\n      if (data) {\n        convertToFormValues(data, setValue);\n      }\n    },\n    [],\n  );\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deleteMappingTitle\",\n    messageKey: \"deleteMappingConfirm\",\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        if (isOnClientScope) {\n          await adminClient.clientScopes.delProtocolMapper({\n            id,\n            mapperId,\n          });\n        } else {\n          await adminClient.clients.delProtocolMapper({\n            id,\n            mapperId,\n          });\n        }\n        addAlert(t(\"mappingDeletedSuccess\"), AlertVariant.success);\n        navigate(toDetails());\n      } catch (error) {\n        addError(\"mappingDeletedError\", error);\n      }\n    },\n  });\n\n  const save = async (formMapping: ProtocolMapperRepresentation) => {\n    const key = isUpdating ? \"Updated\" : \"Created\";\n    try {\n      const mapping = { ...config, ...convertFormValuesToObject(formMapping) };\n      if (isUpdating) {\n        isOnClientScope\n          ? await adminClient.clientScopes.updateProtocolMapper(\n              { id, mapperId },\n              { id: mapperId, ...mapping },\n            )\n          : await adminClient.clients.updateProtocolMapper(\n              { id, mapperId },\n              { id: mapperId, ...mapping },\n            );\n      } else {\n        isOnClientScope\n          ? await adminClient.clientScopes.addProtocolMapper({ id }, mapping)\n          : await adminClient.clients.addProtocolMapper({ id }, mapping);\n      }\n      addAlert(t(`mapping${key}Success`), AlertVariant.success);\n    } catch (error) {\n      addError(`mapping${key}Error`, error);\n    }\n  };\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={isUpdating ? mapping?.name! : t(\"addMapper\")}\n        subKey={isUpdating ? mapperId : \"addMapperExplain\"}\n        dropdownItems={\n          isUpdating\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  value=\"delete\"\n                  onClick={toggleDeleteDialog}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            onSubmit={handleSubmit(save)}\n            role=\"manage-clients\"\n          >\n            <FormGroup label={t(\"mapperType\")} fieldId=\"mapperType\">\n              <KeycloakTextInput\n                type=\"text\"\n                id=\"mapperType\"\n                name=\"mapperType\"\n                readOnlyVariant=\"default\"\n                value={mapping?.name}\n              />\n            </FormGroup>\n            <TextControl\n              name=\"name\"\n              label={t(\"name\")}\n              labelIcon={t(\"mapperNameHelp\")}\n              readOnlyVariant={isUpdating ? \"default\" : undefined}\n              rules={{ required: { value: true, message: t(\"required\") } }}\n            />\n            <DynamicComponents\n              properties={mapping?.properties || []}\n              isNew={!isUpdating}\n            />\n            <ActionGroup>\n              <Button variant=\"primary\" type=\"submit\">\n                {t(\"save\")}\n              </Button>\n              <Button\n                variant=\"link\"\n                component={(props) => <Link {...props} to={toDetails()} />}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["MappingDetails","t","useTranslation","addAlert","addError","useAlerts","id","mapperId","useParams","form","useForm","setValue","handleSubmit","mapping","setMapping","useState","config","setConfig","navigate","useNavigate","realm","useRealm","serverInfo","useServerInfo","isGuid","isUpdating","isOnClientScope","useMatch","MapperRoute","toDetails","toClientScope","toDedicatedScope","useFetch","data","adminClient","type","model","mapper","convertToFormValues","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","AlertVariant","error","save","formMapping","key","convertFormValuesToObject","jsxs","Fragment","jsx","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","FormGroup","KeycloakTextInput","TextControl","DynamicComponents","ActionGroup","Button","props","Link"],"mappings":"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"}