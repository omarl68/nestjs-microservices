{"version":3,"file":"_baseFlatten-BQ8y46Zj.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_apply.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_shortOut.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/constant.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseSetToString.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_setToString.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_overRest.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseRest.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_isFlattenable.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseFlatten.js"],"sourcesContent":["/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n"],"names":["apply","func","thisArg","args","HOT_COUNT","HOT_SPAN","nativeNow","shortOut","count","lastCalled","stamp","remaining","constant","value","baseSetToString","defineProperty","string","identity","baseSetToString$1","setToString","nativeMax","overRest","start","transform","index","length","array","otherArgs","baseRest","spreadableSymbol","Symbol","isFlattenable","isArray","isArguments","baseFlatten","depth","predicate","isStrict","result","arrayPush"],"mappings":"iFAUA,SAASA,EAAMC,EAAMC,EAASC,EAAM,CAClC,OAAQA,EAAK,OAAM,CACjB,IAAK,GAAG,OAAOF,EAAK,KAAKC,CAAO,EAChC,IAAK,GAAG,OAAOD,EAAK,KAAKC,EAASC,EAAK,CAAC,CAAC,EACzC,IAAK,GAAG,OAAOF,EAAK,KAAKC,EAASC,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EAClD,IAAK,GAAG,OAAOF,EAAK,KAAKC,EAASC,EAAK,CAAC,EAAGA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,CAC5D,CACD,OAAOF,EAAK,MAAMC,EAASC,CAAI,CACjC,CCjBA,IAAIC,EAAY,IACZC,EAAW,GAGXC,EAAY,KAAK,IAWrB,SAASC,EAASN,EAAM,CACtB,IAAIO,EAAQ,EACRC,EAAa,EAEjB,OAAO,UAAW,CAChB,IAAIC,EAAQJ,EAAW,EACnBK,EAAYN,GAAYK,EAAQD,GAGpC,GADAA,EAAaC,EACTC,EAAY,GACd,GAAI,EAAEH,GAASJ,EACb,OAAO,UAAU,CAAC,OAGpBI,EAAQ,EAEV,OAAOP,EAAK,MAAM,OAAW,SAAS,CAC1C,CACA,CCfA,SAASW,EAASC,EAAO,CACvB,OAAO,UAAW,CAChB,OAAOA,CACX,CACA,CCXA,IAAIC,EAAmBC,EAA4B,SAASd,EAAMe,EAAQ,CACxE,OAAOD,EAAed,EAAM,WAAY,CACtC,aAAgB,GAChB,WAAc,GACd,MAASW,EAASI,CAAM,EACxB,SAAY,EAChB,CAAG,CACH,EAPwCC,EASxC,MAAAC,EAAeJ,ECVZ,IAACK,EAAcZ,EAASO,CAAe,ECRtCM,EAAY,KAAK,IAWrB,SAASC,EAASpB,EAAMqB,EAAOC,EAAW,CACxC,OAAAD,EAAQF,EAAUE,IAAU,OAAarB,EAAK,OAAS,EAAKqB,EAAO,CAAC,EAC7D,UAAW,CAMhB,QALInB,EAAO,UACPqB,EAAQ,GACRC,EAASL,EAAUjB,EAAK,OAASmB,EAAO,CAAC,EACzCI,EAAQ,MAAMD,CAAM,EAEjB,EAAED,EAAQC,GACfC,EAAMF,CAAK,EAAIrB,EAAKmB,EAAQE,CAAK,EAEnCA,EAAQ,GAER,QADIG,EAAY,MAAML,EAAQ,CAAC,EACxB,EAAEE,EAAQF,GACfK,EAAUH,CAAK,EAAIrB,EAAKqB,CAAK,EAE/B,OAAAG,EAAUL,CAAK,EAAIC,EAAUG,CAAK,EAC3B1B,EAAMC,EAAM,KAAM0B,CAAS,CACtC,CACA,CCrBA,SAASC,EAAS3B,EAAMqB,EAAO,CAC7B,OAAOH,EAAYE,EAASpB,EAAMqB,EAAOL,CAAQ,EAAGhB,EAAO,EAAE,CAC/D,CCTA,IAAI4B,EAAmBC,EAASA,EAAO,mBAAqB,OAS5D,SAASC,EAAclB,EAAO,CAC5B,OAAOmB,EAAQnB,CAAK,GAAKoB,EAAYpB,CAAK,GACxC,CAAC,EAAEgB,GAAoBhB,GAASA,EAAMgB,CAAgB,EAC1D,CCHA,SAASK,EAAYR,EAAOS,EAAOC,EAAWC,EAAUC,EAAQ,CAC9D,IAAId,EAAQ,GACRC,EAASC,EAAM,OAKnB,IAHAU,IAAcA,EAAYL,GAC1BO,IAAWA,EAAS,CAAA,GAEb,EAAEd,EAAQC,GAAQ,CACvB,IAAIZ,EAAQa,EAAMF,CAAK,EACnBW,EAAQ,GAAKC,EAAUvB,CAAK,EAC1BsB,EAAQ,EAEVD,EAAYrB,EAAOsB,EAAQ,EAAGC,EAAWC,EAAUC,CAAM,EAEzDC,EAAUD,EAAQzB,CAAK,EAEfwB,IACVC,EAAOA,EAAO,MAAM,EAAIzB,EAE3B,CACD,OAAOyB,CACT","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}