import{jsxs as T,Fragment as K,jsx as n}from"react/jsx-runtime";import{useState as f}from"react";import{f as j,d0 as N,u as Q,e as W,B as G,A as J,bz as X,h as E,br as Y,ar as O,bo as Z,aR as ee,p as te,O as se,Q as ie,D as le}from"./index-C9t2UlUN.js";import{L as _}from"./PaginatingTableToolbar-oQUfBy2J.js";import{a1 as z,a2 as ne}from"./KeycloakDataTable-2rLFZPhG.js";import{u as ae}from"./ConfirmDialog-BDkqxnFL.js";import{F as oe}from"./filter-icon-C8nM2k1N.js";import{M as re,a as ce}from"./Modal-Bgkd26UL.js";import{b as D}from"./ToolbarContent-D6TJq6fk.js";const U={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},V={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listAvailableRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},F={groups:U,users:U,clientScopes:V,clients:V,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},de=e=>j[e],v=(e,l,...t)=>de(e)[l](...t),pe=(e,l,t)=>t.map(s=>{const c={id:s.role.id,name:s.role.name},i=F[e]?.delete[s.client?0:1];return v(e,i,{id:l,clientUniqueId:s.client?.id,client:s.client?.id,roles:[c]},[c])}),me=async(e,l)=>{const t=F[e].listEffective[0],s=v(e,t,{id:l});if(e!=="roles")return s;const c=await s;return{clientMappings:await Promise.all(c.filter(d=>d.clientRole).map(async d=>{const a=await j.clients.findOne({id:d.containerId});return d.containerId=a?.clientId,{...a,mappings:[d]}})),realmMappings:c.filter(d=>!d.clientRole)}},ge=async(e,l)=>{const t=F[e].listEffective[1];if(e!=="roles")return(await v(e,t,{id:l})).map(i=>({role:i}));const s=await v(e,t,{id:l}),c=await Promise.all(s.filter(i=>i.composite).map(i=>v(e,t,{id:i.id})));return[...s,...c.flat()].map(i=>({role:i}))},fe=async(e,l)=>{const t=F[e].listAvailable[1];return(await v(e,t,l)).map(s=>({role:s}))},L=async({id:e,type:l,first:t,max:s,search:c,endpoint:i})=>N(`/ui-ext/${i}/${l}/${e}`,{first:(t||0).toString(),max:(s||10).toString(),search:c||""}),Re=e=>L({...e,endpoint:"available-roles"}),ue=e=>L({...e,endpoint:"effective-roles"}),Be=e=>N("ui-ext/brute-force-user",e),Te=e=>L({...e,endpoint:"authentication-management"}),he=(e,l,t)=>[...t?e.map(s=>({...s,role:{...s.role,isInherited:!1}})):l.map(s=>({...s,role:{...s.role,isInherited:e.find(c=>c.role.id===s.role.id)===void 0}}))],H=({role:e,client:l})=>T(K,{children:[l?.clientId&&n(Z,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:l.clientId}),e.name]}),Ke=({name:e,id:l,type:t,isManager:s=!0,save:c})=>{const{t:i}=Q(),{addAlert:d,addError:a}=W(),[A,I]=f(0),R=()=>I(A+1),[u,g]=f(!0),[w,h]=f(!1),[S,y]=f([]),x=async o=>{await c(o),R()},k=async()=>{let o=[],B=[];u||(o=await ge(t,l),B=(await ue({type:t,id:l})).map(r=>({client:{clientId:r.client,id:r.clientId},role:{id:r.id,name:r.role,description:r.description}})));const m=await me(t,l),M=m.realmMappings?.map(r=>({role:r}))||[],C=Object.values(m.clientMappings||{}).map(r=>r.mappings.map(p=>({client:{clientId:r.client,...r},role:p}))).flat();return[...he([...M,...C],[...B,...o],u)]},[b,$]=ae({titleKey:"removeMappingTitle",messageKey:i("removeMappingConfirm",{count:S.length}),continueButtonLabel:"remove",continueButtonVariant:G.danger,onCancel:()=>{y([]),R()},onConfirm:async()=>{try{await Promise.all(pe(t,l,S)),d(i("clientScopeRemoveSuccess"),J.success),R()}catch(o){a("clientScopeRemoveError",o)}}});return T(K,{children:[w&&n(ye,{id:l,type:t,name:e,onAssign:x,onClose:()=>h(!1)}),n($,{}),n(z,{"data-testid":"assigned-roles",loader:k,canSelectAll:!0,onSelect:o=>y(o),searchPlaceholderKey:"searchByName",ariaLabelKey:"clientScopeList",isRowDisabled:o=>o.role.isInherited||!1,toolbarItem:T(K,{children:[n(D,{children:n(X,{label:i("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:u,onChange:o=>{g(o),R()}})}),s&&T(K,{children:[n(D,{children:n(E,{"data-testid":"assignRole",onClick:()=>h(!0),children:i("assignRole")})}),n(D,{children:n(E,{variant:"link","data-testid":"unAssignRole",onClick:b,isDisabled:S.length===0,children:i("unAssignRole")})})]})]}),actions:s?[{title:i("unAssignRole"),onRowClick:async o=>(y([o]),b(),!1)}]:[],columns:[{name:"role.name",displayKey:i("name"),transforms:[ne(30)],cellRenderer:H},{name:"role.isInherited",displayKey:i("inherent"),cellFormatters:[Y(),O()]},{name:"role.description",displayKey:i("description"),cellFormatters:[O()]}],emptyState:n(_,{message:i(`noRoles-${t}`),instructions:i(`noRolesInstructions-${t}`),primaryActionText:i("assignRole"),onPrimaryAction:()=>h(!0)})},`${l}${A}`)]})},ye=({id:e,name:l,type:t,isRadio:s=!1,isLDAPmapper:c,onAssign:i,onClose:d})=>{const{t:a}=Q(),{hasAccess:A}=ee(),I=A("view-realm")||A("query-users"),[R,u]=f(!1),[g,w]=f(I?"roles":"clients"),[h,S]=f([]),[y,x]=f(0),k=()=>x(y+1),b=te(),$=({role:{name:m}})=>m?.toUpperCase(),o=async(m,M,C)=>{const r={first:m,max:M};C&&(r.search=C);const p=await fe(t,{...r,id:e});return b(p,$).map(q=>({role:q.role,id:q.role.id}))},B=async(m,M,C)=>{const r=await Re({id:e,type:t,first:m||0,max:M||10,search:C});return b(r.map(p=>({client:{clientId:p.client,id:p.clientId},role:{id:p.id,name:p.role,description:p.description},id:p.id})),({client:{clientId:p},role:{name:P}})=>`${p}${P}`)};return n(re,{variant:ce.large,title:c?a("assignRole"):a("assignRolesTo",{client:l}),isOpen:!0,onClose:d,actions:[n(E,{"data-testid":"assign",isDisabled:h.length===0,variant:"primary",onClick:()=>{i(h),d()},children:a("assign")},"confirm"),n(E,{"data-testid":"cancel",variant:"link",onClick:d,children:a("cancel")},"cancel")],children:n(z,{onSelect:m=>S([...m]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(g==="roles"&&t!=="roles"),searchTypeComponent:I&&n(D,{children:n(se,{onSelect:()=>{w(g==="roles"?"clients":"roles"),u(!1),k()},"data-testid":"filter-type-dropdown",toggle:n(ie,{onToggle:u,icon:n(oe,{}),children:a(g==="roles"?"filterByRoles":"filterByClients")}),isOpen:R,dropdownItems:[n(le,{"data-testid":g,children:a(g==="roles"?"filterByClients":"filterByRoles")},"filter-type")]})}),canSelectAll:!0,isRadio:s,loader:g==="roles"?o:B,ariaLabelKey:"roles",columns:[{name:"name",cellRenderer:H},{name:"role.description",displayKey:"description"}],emptyState:n(_,{message:a("noRoles"),instructions:a("noRealmRolesToAssign"),secondaryActions:[{text:a("filterByClients"),onClick:()=>{w("clients"),k()}}]})},y)})};export{ye as A,Ke as R,H as S,Be as a,Te as f};
//# sourceMappingURL=AddRoleMappingModal-BWNuJU0W.js.map
