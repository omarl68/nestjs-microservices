{"version":3,"file":"UserFederationSection-C0VLyWoI.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardActions.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Gallery/GalleryItem.js","../../../../node_modules/.pnpm/@patternfly+react-icons@4.93.7_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-icons/dist/esm/icons/database-icon.js","../../src/components/keycloak-card/KeycloakCard.tsx","../../src/user-federation/ManagePriorityDialog.tsx","../../src/user-federation/UserFederationSection.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardActions = (_a) => {\n    var { children = null, className = '', hasNoOffset = false } = _a, props = __rest(_a, [\"children\", \"className\", \"hasNoOffset\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardActions, hasNoOffset && styles.modifiers.noOffset, className) }, props), children));\n};\nCardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const GalleryItem = (_a) => {\n    var { children = null, component = 'div' } = _a, props = __rest(_a, [\"children\", \"component\"]);\n    const Component = component;\n    return React.createElement(Component, Object.assign({}, props), children);\n};\nGalleryItem.displayName = 'GalleryItem';\n//# sourceMappingURL=GalleryItem.js.map","import { createIcon } from '../createIcon';\n\nexport const DatabaseIconConfig = {\n  name: 'DatabaseIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const DatabaseIcon = createIcon(DatabaseIconConfig);\n\nexport default DatabaseIcon;","import {\n  Card,\n  CardActions,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Dropdown,\n  Flex,\n  FlexItem,\n  KebabToggle,\n  Label,\n} from \"@patternfly/react-core\";\nimport { ReactElement, useState } from \"react\";\nimport { Link, To } from \"react-router-dom\";\n\nimport \"./keycloak-card.css\";\n\nexport type KeycloakCardProps = {\n  title: string;\n  dropdownItems?: ReactElement[];\n  labelText?: string;\n  labelColor?: any;\n  footerText?: string;\n  to: To;\n};\n\nexport const KeycloakCard = ({\n  title,\n  dropdownItems,\n  labelText,\n  labelColor,\n  footerText,\n  to,\n}: KeycloakCardProps) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const onDropdownToggle = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  return (\n    <Card isSelectable>\n      <CardHeader>\n        <CardActions>\n          {dropdownItems && (\n            <Dropdown\n              data-testid={`${title}-dropdown`}\n              isPlain\n              position={\"right\"}\n              toggle={<KebabToggle onToggle={onDropdownToggle} />}\n              isOpen={isDropdownOpen}\n              dropdownItems={dropdownItems}\n            />\n          )}\n        </CardActions>\n        <CardTitle data-testid=\"keycloak-card-title\">\n          <Link to={to}>{title}</Link>\n        </CardTitle>\n      </CardHeader>\n      <CardBody />\n      <CardFooter>\n        <Flex>\n          <FlexItem className=\"keycloak--keycloak-card__footer\">\n            {footerText && footerText}\n          </FlexItem>\n          <FlexItem>\n            {labelText && (\n              <Label color={labelColor || \"gray\"}>{labelText}</Label>\n            )}\n          </FlexItem>\n        </Flex>\n      </CardFooter>\n    </Card>\n  );\n};\n","import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport {\n  Button,\n  ButtonVariant,\n  DataList,\n  DataListCell,\n  DataListControl,\n  DataListDragButton,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { sortBy } from \"lodash-es\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { adminClient } from \"../admin-client\";\nimport { useAlerts } from \"../components/alert/Alerts\";\n\ntype ManagePriorityDialogProps = {\n  components: ComponentRepresentation[];\n  onClose: () => void;\n};\n\nexport const ManagePriorityDialog = ({\n  components,\n  onClose,\n}: ManagePriorityDialogProps) => {\n  const { t } = useTranslation();\n  const { addAlert, addError } = useAlerts();\n\n  const [id, setId] = useState(\"\");\n  const [liveText, setLiveText] = useState(\"\");\n  const [order, setOrder] = useState(\n    components.map((component) => component.name!),\n  );\n\n  const onDragStart = (id: string) => {\n    setId(id);\n    setLiveText(t(\"onDragStart\", { item: id }));\n  };\n\n  const onDragMove = () => {\n    setLiveText(t(\"onDragMove\", { item: id }));\n  };\n\n  const onDragCancel = () => {\n    setLiveText(t(\"onDragCancel\"));\n  };\n\n  const onDragFinish = (providerOrder: string[]) => {\n    setLiveText(t(\"onDragFinish\", { list: providerOrder }));\n    setOrder(providerOrder);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title={t(\"managePriorityOrder\")}\n      isOpen={true}\n      onClose={onClose}\n      actions={[\n        <Button\n          id=\"modal-confirm\"\n          key=\"confirm\"\n          onClick={async () => {\n            const updates = order.map((name, index) => {\n              const component = components!.find((c) => c.name === name)!;\n              component.config!.priority = [index.toString()];\n              return adminClient.components.update(\n                { id: component.id! },\n                component,\n              );\n            });\n\n            try {\n              await Promise.all(updates);\n              addAlert(t(\"orderChangeSuccessUserFed\"));\n            } catch (error) {\n              addError(\"orderChangeErrorUserFed\", error);\n            }\n\n            onClose();\n          }}\n        >\n          {t(\"save\")}\n        </Button>,\n        <Button\n          id=\"modal-cancel\"\n          key=\"cancel\"\n          variant={ButtonVariant.link}\n          onClick={onClose}\n        >\n          {t(\"cancel\")}\n        </Button>,\n      ]}\n    >\n      <TextContent className=\"pf-u-pb-lg\">\n        <Text>{t(\"managePriorityInfo\")}</Text>\n      </TextContent>\n\n      <DataList\n        aria-label={t(\"manageOrderTableAria\")}\n        data-testid=\"manageOrderDataList\"\n        isCompact\n        onDragFinish={onDragFinish}\n        onDragStart={onDragStart}\n        onDragMove={onDragMove}\n        onDragCancel={onDragCancel}\n        itemOrder={order}\n      >\n        {sortBy(components, \"config.priority\", \"name\").map((component) => (\n          <DataListItem\n            aria-label={component.name}\n            id={component.name}\n            key={component.name}\n          >\n            <DataListItemRow>\n              <DataListControl>\n                <DataListDragButton aria-label={t(\"dragHelp\")} />\n              </DataListControl>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell\n                    key={component.name}\n                    data-testid={component.name}\n                  >\n                    {component.name}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        ))}\n      </DataList>\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </Modal>\n  );\n};\n","import type ComponentRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/componentRepresentation\";\nimport {\n  AlertVariant,\n  ButtonVariant,\n  CardTitle,\n  DropdownItem,\n  Gallery,\n  GalleryItem,\n  PageSection,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n} from \"@patternfly/react-core\";\nimport { DatabaseIcon } from \"@patternfly/react-icons\";\nimport { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { adminClient } from \"../admin-client\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ClickableCard } from \"../components/keycloak-card/ClickableCard\";\nimport { KeycloakCard } from \"../components/keycloak-card/KeycloakCard\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport helpUrls from \"../help-urls\";\nimport { toUpperCase } from \"../util\";\nimport { useFetch } from \"../utils/useFetch\";\nimport { ManagePriorityDialog } from \"./ManagePriorityDialog\";\nimport { toCustomUserFederation } from \"./routes/CustomUserFederation\";\nimport { toNewCustomUserFederation } from \"./routes/NewCustomUserFederation\";\nimport { toUserFederationKerberos } from \"./routes/UserFederationKerberos\";\nimport { toUserFederationLdap } from \"./routes/UserFederationLdap\";\n\nimport \"./user-federation.css\";\n\nexport default function UserFederationSection() {\n  const [userFederations, setUserFederations] =\n    useState<ComponentRepresentation[]>();\n  const { addAlert, addError } = useAlerts();\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(new Date().getTime());\n\n  const navigate = useNavigate();\n\n  const [manageDisplayDialog, setManageDisplayDialog] = useState(false);\n\n  const providers =\n    useServerInfo().componentTypes?.[\n      \"org.keycloak.storage.UserStorageProvider\"\n    ] || [];\n\n  useFetch(\n    async () => {\n      const realmModel = await adminClient.realms.findOne({ realm });\n      const testParams: { [name: string]: string | number } = {\n        parentId: realmModel!.id!,\n        type: \"org.keycloak.storage.UserStorageProvider\",\n      };\n      return adminClient.components.find(testParams);\n    },\n    (userFederations) => {\n      setUserFederations(userFederations);\n    },\n    [key],\n  );\n\n  const ufAddProviderDropdownItems = useMemo(\n    () =>\n      providers.map((p) => (\n        <DropdownItem\n          key={p.id}\n          onClick={() =>\n            navigate(toNewCustomUserFederation({ realm, providerId: p.id! }))\n          }\n        >\n          {p.id.toUpperCase() == \"LDAP\"\n            ? p.id.toUpperCase()\n            : toUpperCase(p.id)}\n        </DropdownItem>\n      )),\n    [],\n  );\n\n  const lowerButtonProps = {\n    variant: \"link\",\n    onClick: () => setManageDisplayDialog(true),\n    lowerButtonTitle: t(\"managePriorities\"),\n  };\n\n  let cards;\n\n  const [currentCard, setCurrentCard] = useState(\"\");\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: t(\"userFedDeleteConfirmTitle\"),\n    messageKey: t(\"userFedDeleteConfirm\"),\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.components.del({ id: currentCard });\n        refresh();\n        addAlert(t(\"userFedDeletedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"userFedDeleteError\", error);\n      }\n    },\n  });\n\n  const toggleDeleteForCard = (id: string) => {\n    setCurrentCard(id);\n    toggleDeleteDialog();\n  };\n\n  const cardSorter = (card1: any, card2: any) => {\n    const a = `${card1.name}`;\n    const b = `${card2.name}`;\n    return a < b ? -1 : 1;\n  };\n\n  const toDetails = (providerId: string, id: string) => {\n    switch (providerId) {\n      case \"ldap\":\n        return toUserFederationLdap({ realm, id });\n      case \"kerberos\":\n        return toUserFederationKerberos({ realm, id });\n      default:\n        return toCustomUserFederation({ realm, providerId, id });\n    }\n  };\n\n  if (userFederations) {\n    cards = userFederations.sort(cardSorter).map((userFederation, index) => (\n      <GalleryItem\n        key={index}\n        className=\"keycloak-admin--user-federation__gallery-item\"\n      >\n        <KeycloakCard\n          to={toDetails(userFederation.providerId!, userFederation.id!)}\n          dropdownItems={[\n            <DropdownItem\n              key={`${index}-cardDelete`}\n              onClick={() => {\n                toggleDeleteForCard(userFederation.id!);\n              }}\n              data-testid=\"card-delete\"\n            >\n              {t(\"delete\")}\n            </DropdownItem>,\n          ]}\n          title={userFederation.name!}\n          footerText={toUpperCase(userFederation.providerId!)}\n          labelText={\n            userFederation.config?.[\"enabled\"]?.[0] !== \"false\"\n              ? `${t(\"enabled\")}`\n              : `${t(\"disabled\")}`\n          }\n          labelColor={\n            userFederation.config?.[\"enabled\"]?.[0] !== \"false\"\n              ? \"blue\"\n              : \"gray\"\n          }\n        />\n      </GalleryItem>\n    ));\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      {manageDisplayDialog && userFederations && (\n        <ManagePriorityDialog\n          onClose={() => setManageDisplayDialog(false)}\n          components={userFederations.filter((p) => p.config?.enabled)}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"userFederation\"\n        subKey=\"userFederationExplain\"\n        helpUrl={helpUrls.userFederationUrl}\n        {...(userFederations && userFederations.length > 0\n          ? {\n              lowerDropdownItems: ufAddProviderDropdownItems,\n              lowerDropdownMenuTitle: \"addNewProvider\",\n              lowerButton: lowerButtonProps,\n            }\n          : {})}\n      />\n      <PageSection>\n        {userFederations && userFederations.length > 0 ? (\n          <Gallery hasGutter>{cards}</Gallery>\n        ) : (\n          <>\n            <TextContent>\n              <Text component={TextVariants.p}>{t(\"getStarted\")}</Text>\n            </TextContent>\n            <TextContent>\n              <Text className=\"pf-u-mt-lg\" component={TextVariants.h2}>\n                {t(\"providers\")}\n              </Text>\n            </TextContent>\n            <hr className=\"pf-u-mb-lg\" />\n            <Gallery hasGutter>\n              {providers.map((p) => (\n                <ClickableCard\n                  key={p.id}\n                  onClick={() =>\n                    navigate(\n                      toNewCustomUserFederation({ realm, providerId: p.id! }),\n                    )\n                  }\n                  data-testid={`${p.id}-card`}\n                >\n                  <CardTitle>\n                    <Split hasGutter>\n                      <SplitItem>\n                        <DatabaseIcon size=\"lg\" />\n                      </SplitItem>\n                      <SplitItem isFilled>\n                        {t(\"addProvider\", {\n                          provider: toUpperCase(p.id!),\n                          count: 4,\n                        })}\n                      </SplitItem>\n                    </Split>\n                  </CardTitle>\n                </ClickableCard>\n              ))}\n            </Gallery>\n          </>\n        )}\n      </PageSection>\n    </>\n  );\n}\n"],"names":["CardActions","_a","children","className","hasNoOffset","props","__rest","React","css","styles","CardFooter","component","Component","GalleryItem","DatabaseIconConfig","DatabaseIcon","createIcon","KeycloakCard","title","dropdownItems","labelText","labelColor","footerText","to","isDropdownOpen","setIsDropdownOpen","useState","onDropdownToggle","jsxs","Card","CardHeader","jsx","Dropdown","KebabToggle","CardTitle","Link","CardBody","Flex","FlexItem","Label","ManagePriorityDialog","components","onClose","useTranslation","addAlert","addError","useAlerts","id","setId","liveText","setLiveText","order","setOrder","onDragStart","onDragMove","onDragCancel","onDragFinish","providerOrder","Modal","ModalVariant","Button","updates","name","index","c","adminClient","error","ButtonVariant","TextContent","Text","DataList","DataListItem","DataListItemRow","DataListControl","DataListDragButton","DataListItemCells","DataListCell","UserFederationSection","userFederations","setUserFederations","t","realm","useRealm","key","setKey","refresh","navigate","useNavigate","manageDisplayDialog","setManageDisplayDialog","providers","useServerInfo","useFetch","testParams","ufAddProviderDropdownItems","useMemo","p","DropdownItem","toNewCustomUserFederation","toUpperCase","lowerButtonProps","cards","currentCard","setCurrentCard","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","AlertVariant","toggleDeleteForCard","cardSorter","card1","card2","a","b","toDetails","providerId","toUserFederationLdap","toUserFederationKerberos","toCustomUserFederation","userFederation","Fragment","ViewHeader","helpUrls","PageSection","Gallery","TextVariants","ClickableCard","Split","SplitItem"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}