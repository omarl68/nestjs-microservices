{"version":3,"file":"DiscoveryEndpointField-Dgm9W27d.js","sources":["../../src/identity-providers/component/DiscoveryEndpointField.tsx"],"sourcesContent":["import { FormGroup, Switch } from \"@patternfly/react-core\";\nimport { ReactNode, useEffect, useState } from \"react\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem } from \"ui-shared\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport environment from \"../../environment\";\n\ntype DiscoveryEndpointFieldProps = {\n  id: string;\n  fileUpload: ReactNode;\n  children: (readOnly: boolean) => ReactNode;\n};\n\nexport const DiscoveryEndpointField = ({\n  id,\n  fileUpload,\n  children,\n}: DiscoveryEndpointFieldProps) => {\n  const { t } = useTranslation();\n  const {\n    setValue,\n    register,\n    setError,\n    watch,\n    clearErrors,\n    formState: { errors },\n  } = useFormContext();\n  const discoveryUrl = watch(\"discoveryEndpoint\");\n\n  const [discovery, setDiscovery] = useState(true);\n  const [discovering, setDiscovering] = useState(false);\n  const [discoveryResult, setDiscoveryResult] =\n    useState<Record<string, string>>();\n\n  const setupForm = (result: Record<string, string>) => {\n    Object.keys(result).map((k) => setValue(`config.${k}`, result[k]));\n  };\n\n  useEffect(() => {\n    if (!discoveryUrl) {\n      setDiscovering(false);\n      return;\n    }\n\n    (async () => {\n      clearErrors(\"discoveryError\");\n      try {\n        const result = await adminClient.identityProviders.importFromUrl({\n          providerId: id,\n          fromUrl: discoveryUrl,\n        });\n        setupForm(result);\n        setDiscoveryResult(result);\n      } catch (error) {\n        setError(\"discoveryError\", {\n          type: \"manual\",\n          message: (error as Error).message,\n        });\n      }\n\n      setDiscovering(false);\n    })();\n  }, [discovering]);\n\n  return (\n    <>\n      <FormGroup\n        label={t(\n          id === \"oidc\" ? \"useDiscoveryEndpoint\" : \"useEntityDescriptor\",\n        )}\n        fieldId=\"kc-discovery-endpoint\"\n        labelIcon={\n          <HelpItem\n            helpText={t(\n              id === \"oidc\"\n                ? \"useDiscoveryEndpointHelp\"\n                : \"useEntityDescriptorHelp\",\n            )}\n            fieldLabelId=\"discoveryEndpoint\"\n          />\n        }\n      >\n        <Switch\n          id=\"kc-discovery-endpoint-switch\"\n          label={t(\"on\")}\n          labelOff={t(\"off\")}\n          isChecked={discovery}\n          onChange={(checked) => {\n            clearErrors(\"discoveryError\");\n            setDiscovery(checked);\n          }}\n          aria-label={t(\n            id === \"oidc\" ? \"useDiscoveryEndpoint\" : \"useEntityDescriptor\",\n          )}\n        />\n      </FormGroup>\n      {discovery && (\n        <FormGroup\n          label={t(\n            id === \"oidc\" ? \"discoveryEndpoint\" : \"samlEntityDescriptor\",\n          )}\n          fieldId=\"kc-discovery-endpoint\"\n          labelIcon={\n            <HelpItem\n              helpText={t(\n                id === \"oidc\"\n                  ? \"discoveryEndpointHelp\"\n                  : \"samlEntityDescriptorHelp\",\n              )}\n              fieldLabelId=\"discoveryEndpoint\"\n            />\n          }\n          validated={\n            errors.discoveryError || errors.discoveryEndpoint\n              ? \"error\"\n              : !discoveryResult\n                ? \"default\"\n                : \"success\"\n          }\n          helperTextInvalid={\n            errors.discoveryEndpoint\n              ? t(\"required\")\n              : t(\"noValidMetaDataFound\", {\n                  error: errors.discoveryError?.message,\n                })\n          }\n          isRequired\n        >\n          <KeycloakTextInput\n            type=\"url\"\n            data-testid=\"discoveryEndpoint\"\n            id=\"kc-discovery-endpoint\"\n            placeholder={\n              id === \"oidc\"\n                ? \"https://hostname/auth/realms/master/.well-known/openid-configuration\"\n                : \"\"\n            }\n            validated={\n              errors.discoveryError || errors.discoveryEndpoint\n                ? \"error\"\n                : !discoveryResult\n                  ? \"default\"\n                  : \"success\"\n            }\n            customIconUrl={\n              discovering\n                ? environment.resourceUrl + \"/discovery-load-indicator.svg\"\n                : \"\"\n            }\n            {...register(\"discoveryEndpoint\", {\n              required: true,\n              onBlur: () => setDiscovering(true),\n            })}\n          />\n        </FormGroup>\n      )}\n      {!discovery && fileUpload}\n      {discovery && !errors.discoveryError && children(true)}\n      {!discovery && children(false)}\n    </>\n  );\n};\n"],"names":["DiscoveryEndpointField","id","fileUpload","children","t","useTranslation","setValue","register","setError","watch","clearErrors","errors","useFormContext","discoveryUrl","discovery","setDiscovery","useState","discovering","setDiscovering","discoveryResult","setDiscoveryResult","setupForm","result","k","useEffect","adminClient","error","jsxs","Fragment","jsx","FormGroup","HelpItem","Switch","checked","KeycloakTextInput","environment"],"mappings":"yPAgBO,MAAMA,EAAyB,CAAC,CACrC,GAAAC,EACA,WAAAC,EACA,SAAAC,CACF,IAAmC,CAC3B,KAAA,CAAE,EAAAC,GAAMC,IACR,CACJ,SAAAC,EACA,SAAAC,EACA,SAAAC,EACA,MAAAC,EACA,YAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAAe,EACbC,EAAeJ,EAAM,mBAAmB,EAExC,CAACK,EAAWC,CAAY,EAAIC,EAAS,EAAI,EACzC,CAACC,EAAaC,CAAc,EAAIF,EAAS,EAAK,EAC9C,CAACG,EAAiBC,CAAkB,EACxCJ,EAAiC,EAE7BK,EAAaC,GAAmC,CACpD,OAAO,KAAKA,CAAM,EAAE,IAAKC,GAAMjB,EAAS,UAAUiB,CAAC,GAAID,EAAOC,CAAC,CAAC,CAAC,CAAA,EAGnE,OAAAC,EAAU,IAAM,CACd,GAAI,CAACX,EAAc,CACjBK,EAAe,EAAK,EACpB,MACF,EAEC,SAAY,CACXR,EAAY,gBAAgB,EACxB,GAAA,CACF,MAAMY,EAAS,MAAMG,EAAY,kBAAkB,cAAc,CAC/D,WAAYxB,EACZ,QAASY,CAAA,CACV,EACDQ,EAAUC,CAAM,EAChBF,EAAmBE,CAAM,QAClBI,EAAO,CACdlB,EAAS,iBAAkB,CACzB,KAAM,SACN,QAAUkB,EAAgB,OAAA,CAC3B,CACH,CAEAR,EAAe,EAAK,CAAA,IACnB,EACF,CAACD,CAAW,CAAC,EAIZU,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAA,CACC,MAAO1B,EACLH,IAAO,OAAS,uBAAyB,qBAC3C,EACA,QAAQ,wBACR,UACE4B,EAACE,EAAA,CACC,SAAU3B,EACRH,IAAO,OACH,2BACA,yBACN,EACA,aAAa,mBAAA,CACf,EAGF,SAAA4B,EAACG,EAAA,CACC,GAAG,+BACH,MAAO5B,EAAE,IAAI,EACb,SAAUA,EAAE,KAAK,EACjB,UAAWU,EACX,SAAWmB,GAAY,CACrBvB,EAAY,gBAAgB,EAC5BK,EAAakB,CAAO,CACtB,EACA,aAAY7B,EACVH,IAAO,OAAS,uBAAyB,qBAC3C,CAAA,CACF,CAAA,CACF,EACCa,GACCe,EAACC,EAAA,CACC,MAAO1B,EACLH,IAAO,OAAS,oBAAsB,sBACxC,EACA,QAAQ,wBACR,UACE4B,EAACE,EAAA,CACC,SAAU3B,EACRH,IAAO,OACH,wBACA,0BACN,EACA,aAAa,mBAAA,CACf,EAEF,UACEU,EAAO,gBAAkBA,EAAO,kBAC5B,QACCQ,EAEC,UADA,UAGR,kBACER,EAAO,kBACHP,EAAE,UAAU,EACZA,EAAE,uBAAwB,CACxB,MAAOO,EAAO,gBAAgB,OAAA,CAC/B,EAEP,WAAU,GAEV,SAAAkB,EAACK,EAAA,CACC,KAAK,MACL,cAAY,oBACZ,GAAG,wBACH,YACEjC,IAAO,OACH,uEACA,GAEN,UACEU,EAAO,gBAAkBA,EAAO,kBAC5B,QACCQ,EAEC,UADA,UAGR,cACEF,EACIkB,EAAY,YAAc,gCAC1B,GAEL,GAAG5B,EAAS,oBAAqB,CAChC,SAAU,GACV,OAAQ,IAAMW,EAAe,EAAI,CAAA,CAClC,CAAA,CACH,CAAA,CACF,EAED,CAACJ,GAAaZ,EACdY,GAAa,CAACH,EAAO,gBAAkBR,EAAS,EAAI,EACpD,CAACW,GAAaX,EAAS,EAAK,CAC/B,CAAA,CAAA,CAEJ"}